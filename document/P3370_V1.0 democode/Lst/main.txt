; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\main.o --asm_dir=.\Lst\ --list_dir=.\Lst\ --depend=.\obj\main.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I.\Inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\INC\NXP\LPC11Uxx -D__MICROLIB -D__UVISION_VERSION=536 -D__DEBUG_FLASH --omf_browse=.\obj\main.crf Src\main.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  nsAPI_Main_GetInReport PROC
;;;34      */
;;;35     void nsAPI_Main_GetInReport(void)
000000  2000              MOVS     r0,#0
;;;36     {
;;;37       g_Main_Setting.InReport[0] = 0x00;
000002  4961              LDR      r1,|L1.392|
000004  7008              STRB     r0,[r1,#0]
;;;38     
;;;39     }
000006  4770              BX       lr
;;;40     
                          ENDP

                  nsAPI_Main_GetInMouseButtonReport PROC
;;;41     void nsAPI_Main_GetInMouseButtonReport(U16 *PreButtonEvent,U16 *u16ButtonStatus,U16 *KeycodeTblIdx)
000008  b510              PUSH     {r4,lr}
;;;42     {
;;;43     	switch(*u16ButtonStatus)
00000a  880b              LDRH     r3,[r1,#0]
00000c  2b01              CMP      r3,#1
00000e  d002              BEQ      |L1.22|
000010  2b04              CMP      r3,#4
000012  d10c              BNE      |L1.46|
000014  e00c              B        |L1.48|
                  |L1.22|
;;;44     	{
;;;45     		case GPIO_SCANKEY_PR:
;;;46     		g_Main_Setting.InReport[GIdx0] = u8MouseKeyTable[*KeycodeTblIdx];
000016  8813              LDRH     r3,[r2,#0]
000018  4c5c              LDR      r4,|L1.396|
00001a  5ce3              LDRB     r3,[r4,r3]
00001c  4c5a              LDR      r4,|L1.392|
00001e  7023              STRB     r3,[r4,#0]
;;;47     		g_Main_Setting.MouseEvent|= MAIN_FLAG_MOUSE_REPORT_READY;
000020  4623              MOV      r3,r4
000022  8cdb              LDRH     r3,[r3,#0x26]  ; g_Main_Setting
000024  2401              MOVS     r4,#1
000026  4323              ORRS     r3,r3,r4
000028  4c57              LDR      r4,|L1.392|
00002a  84e3              STRH     r3,[r4,#0x26]
;;;48     		break;
00002c  e00e              B        |L1.76|
                  |L1.46|
;;;49     
;;;50     		case GPIO_SCANKEY_RELEASE:
00002e  bf00              NOP      
                  |L1.48|
;;;51     		default:
;;;52     		*KeycodeTblIdx = 0;
000030  2300              MOVS     r3,#0
000032  8013              STRH     r3,[r2,#0]
;;;53     		g_Main_Setting.InReport[GIdx0] = u8MouseKeyTable[*KeycodeTblIdx];
000034  8813              LDRH     r3,[r2,#0]
000036  4c55              LDR      r4,|L1.396|
000038  5ce3              LDRB     r3,[r4,r3]
00003a  4c53              LDR      r4,|L1.392|
00003c  7023              STRB     r3,[r4,#0]
;;;54     		g_Main_Setting.MouseEvent |= MAIN_FLAG_MOUSE_REPORT_READY;
00003e  4623              MOV      r3,r4
000040  8cdb              LDRH     r3,[r3,#0x26]  ; g_Main_Setting
000042  2401              MOVS     r4,#1
000044  4323              ORRS     r3,r3,r4
000046  4c50              LDR      r4,|L1.392|
000048  84e3              STRH     r3,[r4,#0x26]
;;;55     		break;
00004a  bf00              NOP      
                  |L1.76|
00004c  bf00              NOP                            ;48
;;;56     	}
;;;57     }
00004e  bd10              POP      {r4,pc}
;;;58     
                          ENDP

                  nsAPI_Main_GetInMouseQIEReport PROC
;;;59     
;;;60     void nsAPI_Main_GetInMouseQIEReport(S8 s8Temp)
000050  4a4d              LDR      r2,|L1.392|
;;;61     {
;;;62     	g_Main_Setting.InReport[GIdx5] = s8Temp;
000052  7150              STRB     r0,[r2,#5]
;;;63     	g_Main_Setting.MouseEvent |= (MAIN_FLAG_MOUSE_QIE_EVENT|MAIN_FLAG_MOUSE_REPORT_READY);
000054  4611              MOV      r1,r2
000056  8cc9              LDRH     r1,[r1,#0x26]  ; g_Main_Setting
000058  2205              MOVS     r2,#5
00005a  4311              ORRS     r1,r1,r2
00005c  4a4a              LDR      r2,|L1.392|
00005e  84d1              STRH     r1,[r2,#0x26]
;;;64     }
000060  4770              BX       lr
;;;65     
                          ENDP

                  SetOutReport PROC
;;;69      */
;;;70     void SetOutReport (void)
000062  4770              BX       lr
;;;71     {
;;;72     
;;;73     }
;;;74     
                          ENDP

                  Mapp_Main_Init PROC
;;;76     /* Main Program */
;;;77     void Mapp_Main_Init(void)
000064  b510              PUSH     {r4,lr}
;;;78     {
;;;79     	g_Main_Setting.MouseEvent = 0;
000066  2000              MOVS     r0,#0
000068  4947              LDR      r1,|L1.392|
00006a  84c8              STRH     r0,[r1,#0x26]
;;;80     	nsAPI_USB_EndPointClr();
00006c  f7fffffe          BL       nsAPI_USB_EndPointClr
;;;81     }
000070  bd10              POP      {r4,pc}
;;;82     
                          ENDP

                  main PROC
;;;83     int main (void)
000072  2000              MOVS     r0,#0
;;;84     {
;;;85     
;;;86     	cpi_clicked_flag = 0; 
000074  4946              LDR      r1,|L1.400|
000076  8008              STRH     r0,[r1,#0]
;;;87     	cpi_p_Cntr = 0;		 
000078  4946              LDR      r1,|L1.404|
00007a  7008              STRB     r0,[r1,#0]
;;;88     	cpi_m_Cntr = 0;		 
00007c  4946              LDR      r1,|L1.408|
00007e  7008              STRB     r0,[r1,#0]
;;;89     
;;;90     	// default configured as Burst motion read mode ENABLE_NON_BURST_MODE_BIT is to use normal motion register read
;;;91     	mouse_event_ctrl = (ENABLE_MOTION_BIT|ENABLE_BUTTON_SCROLL_BIT );
000080  2003              MOVS     r0,#3
000082  4946              LDR      r1,|L1.412|
000084  7008              STRB     r0,[r1,#0]
;;;92     	nsAPI_System_Init();
000086  f7fffffe          BL       nsAPI_System_Init
;;;93     	nsAPI_SSP_Sensor_Init();
00008a  f7fffffe          BL       nsAPI_SSP_Sensor_Init
;;;94     	Mapp_Main_Init();
00008e  f7fffffe          BL       Mapp_Main_Init
;;;95     
;;;96         while(1)
000092  e019              B        |L1.200|
                  |L1.148|
;;;97         {
;;;98     					
;;;99     		if( IS_BIT_SET(mouse_event_ctrl,ENABLE_BUTTON_SCROLL_BIT) ) 
000094  4841              LDR      r0,|L1.412|
000096  7800              LDRB     r0,[r0,#0]  ; mouse_event_ctrl
000098  2102              MOVS     r1,#2
00009a  4008              ANDS     r0,r0,r1
00009c  2802              CMP      r0,#2
00009e  d111              BNE      |L1.196|
;;;100    		{
;;;101    			if(poll_tick_btn >= POLL_RATE_BTN)
0000a0  483f              LDR      r0,|L1.416|
0000a2  8800              LDRH     r0,[r0,#0]  ; poll_tick_btn
0000a4  280a              CMP      r0,#0xa
0000a6  db04              BLT      |L1.178|
;;;102    			{
;;;103    				poll_tick_btn = 0;
0000a8  2000              MOVS     r0,#0
0000aa  493d              LDR      r1,|L1.416|
0000ac  8008              STRH     r0,[r1,#0]
;;;104    				nsAPI_GPIO_MouseButtonMonitor();
0000ae  f7fffffe          BL       nsAPI_GPIO_MouseButtonMonitor
                  |L1.178|
;;;105    			}
;;;106    
;;;107    			if(poll_z_wheel >= POLL_Z_WHEEL) 
0000b2  483c              LDR      r0,|L1.420|
0000b4  8800              LDRH     r0,[r0,#0]  ; poll_z_wheel
0000b6  2803              CMP      r0,#3
0000b8  db04              BLT      |L1.196|
;;;108    			{
;;;109    				poll_z_wheel = 0;
0000ba  2000              MOVS     r0,#0
0000bc  4939              LDR      r1,|L1.420|
0000be  8008              STRH     r0,[r1,#0]
;;;110    				Z_Wheel();
0000c0  f7fffffe          BL       Z_Wheel
                  |L1.196|
;;;111    			}
;;;112    		}	
;;;113    		nsAPI_SSP_Sensor_Monitor();		
0000c4  f7fffffe          BL       nsAPI_SSP_Sensor_Monitor
                  |L1.200|
0000c8  e7e4              B        |L1.148|
;;;114        }
;;;115    }
;;;116    
                          ENDP

                  nsAPI_Main_Clr_MouseEvent PROC
;;;163    
;;;164    void nsAPI_Main_Clr_MouseEvent(void)
0000ca  482f              LDR      r0,|L1.392|
;;;165    {
;;;166    	
;;;167    	if((g_Main_Setting.MouseEvent & MAIN_FLAG_MOUSE_QIE_EVENT) == MAIN_FLAG_MOUSE_QIE_EVENT)
0000cc  8cc0              LDRH     r0,[r0,#0x26]  ; g_Main_Setting
0000ce  2104              MOVS     r1,#4
0000d0  4008              ANDS     r0,r0,r1
0000d2  2804              CMP      r0,#4
0000d4  d104              BNE      |L1.224|
;;;168    	{
;;;169    		g_Main_Setting.MouseEvent &= ~MAIN_FLAG_MOUSE_QIE_EVENT;
0000d6  482c              LDR      r0,|L1.392|
0000d8  8cc0              LDRH     r0,[r0,#0x26]  ; g_Main_Setting
0000da  4388              BICS     r0,r0,r1
0000dc  492a              LDR      r1,|L1.392|
0000de  84c8              STRH     r0,[r1,#0x26]
                  |L1.224|
;;;170    	}
;;;171    
;;;172    	if((g_Main_Setting.MouseEvent & MAIN_FLAG_MOUSE_EVENT) == MAIN_FLAG_MOUSE_EVENT)
0000e0  4829              LDR      r0,|L1.392|
0000e2  8cc0              LDRH     r0,[r0,#0x26]  ; g_Main_Setting
0000e4  2108              MOVS     r1,#8
0000e6  4008              ANDS     r0,r0,r1
0000e8  2808              CMP      r0,#8
0000ea  d104              BNE      |L1.246|
;;;173    	{
;;;174    		g_Main_Setting.MouseEvent &= ~MAIN_FLAG_MOUSE_EVENT;
0000ec  4826              LDR      r0,|L1.392|
0000ee  8cc0              LDRH     r0,[r0,#0x26]  ; g_Main_Setting
0000f0  4388              BICS     r0,r0,r1
0000f2  4925              LDR      r1,|L1.392|
0000f4  84c8              STRH     r0,[r1,#0x26]
                  |L1.246|
;;;175    	}
;;;176    
;;;177    	g_Main_Setting.InReport[X_LOW]			= 0; 
0000f6  2000              MOVS     r0,#0
0000f8  4923              LDR      r1,|L1.392|
0000fa  7048              STRB     r0,[r1,#1]
;;;178    	g_Main_Setting.InReport[X_HIGH] 		= 0; 
0000fc  7088              STRB     r0,[r1,#2]
;;;179    	g_Main_Setting.InReport[Y_LOW]			= 0;
0000fe  70c8              STRB     r0,[r1,#3]
;;;180    	g_Main_Setting.InReport[Y_HIGH]			= 0;
000100  7108              STRB     r0,[r1,#4]
;;;181    	g_Main_Setting.InReport[WHEEL]			= 0;
000102  7148              STRB     r0,[r1,#5]
;;;182    #ifdef	ENABLE_BURST_DAT_REPORT
;;;183    	g_Main_Setting.InReport[MOTION]			= 0;
;;;184    	g_Main_Setting.InReport[SQUAL]			= 0;
;;;185    	g_Main_Setting.InReport[PIXEL_SUM]		= 0;
;;;186    	g_Main_Setting.InReport[MAX_PIXEL]		= 0; 
;;;187    	g_Main_Setting.InReport[MIN_PIXEL]		= 0; 
;;;188    	g_Main_Setting.InReport[SHUTTER_UPPER]	= 0; 
;;;189    	g_Main_Setting.InReport[SHUTTER_LOWER]	= 0;
;;;190    #endif
;;;191    
;;;192    }
000104  4770              BX       lr
                          ENDP

                  nsAPI_Main_MouseEventHandle PROC
;;;124    ****************************************************************/
;;;125    void nsAPI_Main_MouseEventHandle(void)
000106  b510              PUSH     {r4,lr}
;;;126    {
;;;127    	__disable_irq();
000108  b672              CPSID    i
;;;128    
;;;129    //	if(	((g_Main_Setting.MouseEvent & MAIN_FLAG_MOUSE_REPORT_READY) == MAIN_FLAG_MOUSE_REPORT_READY) &&
;;;130    //		((g_Main_Setting.EPInOutReq & EP1_IN) == EP1_IN))
;;;131    	{								   
;;;132    		g_Main_Setting.InReportSize 			= (U8)EP1_MAX_SIZE;
00010a  2106              MOVS     r1,#6
00010c  481e              LDR      r0,|L1.392|
00010e  3020              ADDS     r0,r0,#0x20
000110  7141              STRB     r1,[r0,#5]
;;;133    		g_Main_Setting.MouseEvent  	   		   &= ~MAIN_FLAG_MOUSE_REPORT_READY;
000112  3820              SUBS     r0,r0,#0x20
000114  8cc0              LDRH     r0,[r0,#0x26]  ; g_Main_Setting
000116  0840              LSRS     r0,r0,#1
000118  0040              LSLS     r0,r0,#1
00011a  491b              LDR      r1,|L1.392|
00011c  84c8              STRH     r0,[r1,#0x26]
;;;134    		g_Main_Setting.InReport[X_LOW]			= report1ms_data_x.b[0];
00011e  4822              LDR      r0,|L1.424|
000120  7800              LDRB     r0,[r0,#0]  ; report1ms_data_x
000122  7048              STRB     r0,[r1,#1]
;;;135    		g_Main_Setting.InReport[X_HIGH] 		= report1ms_data_x.b[1];
000124  4820              LDR      r0,|L1.424|
000126  7840              LDRB     r0,[r0,#1]  ; report1ms_data_x
000128  7088              STRB     r0,[r1,#2]
;;;136    		g_Main_Setting.InReport[Y_LOW]			= report1ms_data_y.b[0];
00012a  4820              LDR      r0,|L1.428|
00012c  7800              LDRB     r0,[r0,#0]  ; report1ms_data_y
00012e  70c8              STRB     r0,[r1,#3]
;;;137    		g_Main_Setting.InReport[Y_HIGH]			= report1ms_data_y.b[1];
000130  481e              LDR      r0,|L1.428|
000132  7840              LDRB     r0,[r0,#1]  ; report1ms_data_y
000134  7108              STRB     r0,[r1,#4]
;;;138    		g_Main_Setting.InReport[WHEEL]			= count_z;
000136  481e              LDR      r0,|L1.432|
000138  7800              LDRB     r0,[r0,#0]  ; count_z
00013a  7148              STRB     r0,[r1,#5]
;;;139    #ifdef	ENABLE_BURST_DAT_REPORT
;;;140    		g_Main_Setting.InReport[MOTION]			= u8motion;
;;;141    		g_Main_Setting.InReport[SQUAL]			= u8Squal;
;;;142    		g_Main_Setting.InReport[PIXEL_SUM]		= u8PixelSum;
;;;143    		g_Main_Setting.InReport[MAX_PIXEL]		= u16Pixel.b[1]; 
;;;144    		g_Main_Setting.InReport[MIN_PIXEL]		= u16Pixel.b[0]; 
;;;145    		g_Main_Setting.InReport[SHUTTER_UPPER]	= u16Shutter.b[1];
;;;146    		g_Main_Setting.InReport[SHUTTER_LOWER]	= u16Shutter.b[0];
;;;147    #endif
;;;148    		nsAPI_USB_WriteEP(HID_EP1_IN,&g_Main_Setting.InReport[0],g_Main_Setting.InReportSize);
00013c  4608              MOV      r0,r1
00013e  3020              ADDS     r0,r0,#0x20
000140  7942              LDRB     r2,[r0,#5]  ; g_Main_Setting
000142  2081              MOVS     r0,#0x81
000144  f7fffffe          BL       nsAPI_USB_WriteEP
;;;149    		nsAPI_Main_Clr_MouseEvent();
000148  f7fffffe          BL       nsAPI_Main_Clr_MouseEvent
;;;150    
;;;151    		count_z = 0;
00014c  2000              MOVS     r0,#0
00014e  4918              LDR      r1,|L1.432|
000150  7008              STRB     r0,[r1,#0]
;;;152    		u8motion = 0;
000152  4918              LDR      r1,|L1.436|
000154  7008              STRB     r0,[r1,#0]
;;;153    		u8Squal = 0;
000156  4918              LDR      r1,|L1.440|
000158  7008              STRB     r0,[r1,#0]
;;;154    		u8PixelSum = 0;
00015a  4918              LDR      r1,|L1.444|
00015c  7008              STRB     r0,[r1,#0]
;;;155    		u16Pixel.w = 0;	
00015e  4918              LDR      r1,|L1.448|
000160  8008              STRH     r0,[r1,#0]
;;;156    		u16Shutter.w = 0;
000162  4918              LDR      r1,|L1.452|
000164  8008              STRH     r0,[r1,#0]
;;;157    		g_Main_Setting.MouseEvent &= ~MAIN_FLAG_MOUSE_EVENT;
000166  4808              LDR      r0,|L1.392|
000168  8cc0              LDRH     r0,[r0,#0x26]  ; g_Main_Setting
00016a  2108              MOVS     r1,#8
00016c  4388              BICS     r0,r0,r1
00016e  4906              LDR      r1,|L1.392|
000170  84c8              STRH     r0,[r1,#0x26]
;;;158    		g_Main_Setting.EPInOutReq &= ~EP1_IN;
000172  4608              MOV      r0,r1
000174  3020              ADDS     r0,r0,#0x20
000176  7900              LDRB     r0,[r0,#4]  ; g_Main_Setting
000178  0841              LSRS     r1,r0,#1
00017a  0049              LSLS     r1,r1,#1
00017c  4802              LDR      r0,|L1.392|
00017e  3020              ADDS     r0,r0,#0x20
000180  7101              STRB     r1,[r0,#4]
;;;159    	}
;;;160    	__enable_irq();
000182  b662              CPSIE    i
;;;161    }
000184  bd10              POP      {r4,pc}
;;;162    
                          ENDP

000186  0000              DCW      0x0000
                  |L1.392|
                          DCD      g_Main_Setting
                  |L1.396|
                          DCD      u8MouseKeyTable
                  |L1.400|
                          DCD      cpi_clicked_flag
                  |L1.404|
                          DCD      cpi_p_Cntr
                  |L1.408|
                          DCD      cpi_m_Cntr
                  |L1.412|
                          DCD      mouse_event_ctrl
                  |L1.416|
                          DCD      poll_tick_btn
                  |L1.420|
                          DCD      poll_z_wheel
                  |L1.424|
                          DCD      report1ms_data_x
                  |L1.428|
                          DCD      report1ms_data_y
                  |L1.432|
                          DCD      count_z
                  |L1.436|
                          DCD      u8motion
                  |L1.440|
                          DCD      u8Squal
                  |L1.444|
                          DCD      u8PixelSum
                  |L1.448|
                          DCD      u16Pixel
                  |L1.452|
                          DCD      u16Shutter

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  g_Main_Setting
                          %        40

                          AREA ||.data||, DATA, ALIGN=0

                  mouse_event_ctrl
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "Src\\main.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_0c3f4a5d____REV16|
#line 112 ".\\Inc\\core_cmInstr.h"
|__asm___6_main_c_0c3f4a5d____REV16| PROC
#line 113

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_0c3f4a5d____REVSH|
#line 130
|__asm___6_main_c_0c3f4a5d____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
