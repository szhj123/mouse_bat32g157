; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\systick.o --asm_dir=.\Lst\ --list_dir=.\Lst\ --depend=.\obj\systick.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I.\Inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\INC\NXP\LPC11Uxx -D__MICROLIB -D__UVISION_VERSION=536 -D__DEBUG_FLASH --omf_browse=.\obj\systick.crf Src\Systick.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  SysTick_Handler PROC
;;;10     
;;;11     void SysTick_Handler(void)
000000  4770              BX       lr
;;;12     {   
;;;13     
;;;14     //	if(g_Timer32_LED_Setting.LEDStatusType == LED_BREATHING)
;;;15     //	{	
;;;16     //		if((g_Timer32_LED_Setting.BreathingStepStatus & BREATHING_STEP_RESETTING) == BREATHING_STEP_RESETTING)  
;;;17     //		nsAPI_Timer32PWM_Breathing_ReSetting(15);
;;;18     
;;;19     //		NDrv_Timer32PWM_Breathing();	
;;;20     //	}
;;;21     }
;;;22     
                          ENDP

                  nsAPI_SysTick_Init PROC
;;;23     
;;;24     void nsAPI_SysTick_Init(void)
000002  b510              PUSH     {r4,lr}
;;;25     {
;;;26     	NVIC_DisableIRQ(SysTick_IRQn);
000004  2000              MOVS     r0,#0
000006  43c0              MVNS     r0,r0
000008  06c2              LSLS     r2,r0,#27
00000a  0ed2              LSRS     r2,r2,#27
00000c  2101              MOVS     r1,#1
00000e  4091              LSLS     r1,r1,r2
000010  4a34              LDR      r2,|L1.228|
000012  6011              STR      r1,[r2,#0]
000014  bf00              NOP      
;;;27     
;;;28     	if(SysTick_Config(SYSTICK_TIMER*10/*ms*/))/* Setup SysTick Timer for 10 msec interrupts  */
000016  217d              MOVS     r1,#0x7d
000018  00c9              LSLS     r1,r1,#3
00001a  4833              LDR      r0,|L1.232|
00001c  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
00001e  f7fffffe          BL       __aeabi_uidivmod
000022  210a              MOVS     r1,#0xa
000024  4604              MOV      r4,r0
000026  434c              MULS     r4,r1,r4
000028  4830              LDR      r0,|L1.236|
00002a  4284              CMP      r4,r0
00002c  d901              BLS      |L1.50|
00002e  2001              MOVS     r0,#1
000030  e00f              B        |L1.82|
                  |L1.50|
000032  0220              LSLS     r0,r4,#8
000034  0a00              LSRS     r0,r0,#8
000036  1e40              SUBS     r0,r0,#1
000038  492d              LDR      r1,|L1.240|
00003a  6148              STR      r0,[r1,#0x14]
00003c  2107              MOVS     r1,#7
00003e  2000              MOVS     r0,#0
000040  43c0              MVNS     r0,r0
000042  f7fffffe          BL       NVIC_SetPriority
000046  2000              MOVS     r0,#0
000048  4929              LDR      r1,|L1.240|
00004a  6188              STR      r0,[r1,#0x18]
00004c  2007              MOVS     r0,#7
00004e  6108              STR      r0,[r1,#0x10]
000050  2000              MOVS     r0,#0
                  |L1.82|
000052  2800              CMP      r0,#0
000054  d001              BEQ      |L1.90|
;;;29     	//if(SysTick_Config(SYSTICK_TIMER))//*10/*ms*/))/* Setup SysTick Timer for 10 msec interrupts  */		
;;;30     	{
;;;31     		while(1){}/*Systick Error*/
000056  bf00              NOP      
                  |L1.88|
000058  e7fe              B        |L1.88|
                  |L1.90|
;;;32     	}
;;;33     	
;;;34     	NVIC_EnableIRQ(SysTick_IRQn);	
00005a  2000              MOVS     r0,#0
00005c  43c0              MVNS     r0,r0
00005e  06c2              LSLS     r2,r0,#27
000060  0ed2              LSRS     r2,r2,#27
000062  2101              MOVS     r1,#1
000064  4091              LSLS     r1,r1,r2
000066  4a1f              LDR      r2,|L1.228|
000068  3a80              SUBS     r2,r2,#0x80
00006a  6011              STR      r1,[r2,#0]
00006c  bf00              NOP      
;;;35     }
00006e  bd10              POP      {r4,pc}
;;;36     
                          ENDP

                  NVIC_SetPriority PROC
;;;606     */
;;;607    static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
000070  b510              PUSH     {r4,lr}
;;;608    {
;;;609      if(IRQn < 0) {
000072  2800              CMP      r0,#0
000074  da19              BGE      |L1.170|
;;;610        SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) | 
000076  4a1f              LDR      r2,|L1.244|
000078  0703              LSLS     r3,r0,#28
00007a  0f1b              LSRS     r3,r3,#28
00007c  3b08              SUBS     r3,r3,#8
00007e  089b              LSRS     r3,r3,#2
000080  009b              LSLS     r3,r3,#2
000082  58d2              LDR      r2,[r2,r3]
000084  0783              LSLS     r3,r0,#30
000086  0edc              LSRS     r4,r3,#27
000088  23ff              MOVS     r3,#0xff
00008a  40a3              LSLS     r3,r3,r4
00008c  439a              BICS     r2,r2,r3
00008e  074b              LSLS     r3,r1,#29
000090  0e1b              LSRS     r3,r3,#24
000092  0784              LSLS     r4,r0,#30
000094  0ee4              LSRS     r4,r4,#27
000096  40a3              LSLS     r3,r3,r4
000098  431a              ORRS     r2,r2,r3
00009a  4b16              LDR      r3,|L1.244|
00009c  0704              LSLS     r4,r0,#28
00009e  0f24              LSRS     r4,r4,#28
0000a0  3c08              SUBS     r4,r4,#8
0000a2  08a4              LSRS     r4,r4,#2
0000a4  00a4              LSLS     r4,r4,#2
0000a6  511a              STR      r2,[r3,r4]
0000a8  e01a              B        |L1.224|
                  |L1.170|
;;;611            (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
;;;612      else {
;;;613        NVIC->IPR[_IP_IDX(IRQn)] = (NVIC->IPR[_IP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
0000aa  4a0e              LDR      r2,|L1.228|
0000ac  3a80              SUBS     r2,r2,#0x80
0000ae  2303              MOVS     r3,#3
0000b0  021b              LSLS     r3,r3,#8
0000b2  18d2              ADDS     r2,r2,r3
0000b4  0883              LSRS     r3,r0,#2
0000b6  009b              LSLS     r3,r3,#2
0000b8  58d2              LDR      r2,[r2,r3]
0000ba  0783              LSLS     r3,r0,#30
0000bc  0edc              LSRS     r4,r3,#27
0000be  23ff              MOVS     r3,#0xff
0000c0  40a3              LSLS     r3,r3,r4
0000c2  439a              BICS     r2,r2,r3
0000c4  074b              LSLS     r3,r1,#29
0000c6  0e1b              LSRS     r3,r3,#24
0000c8  0784              LSLS     r4,r0,#30
0000ca  0ee4              LSRS     r4,r4,#27
0000cc  40a3              LSLS     r3,r3,r4
0000ce  431a              ORRS     r2,r2,r3
0000d0  4b04              LDR      r3,|L1.228|
0000d2  3b80              SUBS     r3,r3,#0x80
0000d4  2403              MOVS     r4,#3
0000d6  0224              LSLS     r4,r4,#8
0000d8  191b              ADDS     r3,r3,r4
0000da  0884              LSRS     r4,r0,#2
0000dc  00a4              LSLS     r4,r4,#2
0000de  511a              STR      r2,[r3,r4]
                  |L1.224|
;;;614            (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
;;;615    }
0000e0  bd10              POP      {r4,pc}
;;;616    
                          ENDP

0000e2  0000              DCW      0x0000
                  |L1.228|
                          DCD      0xe000e180
                  |L1.232|
                          DCD      SystemCoreClock
                  |L1.236|
                          DCD      0x00ffffff
                  |L1.240|
                          DCD      0xe000e000
                  |L1.244|
                          DCD      0xe000ed1c

;*** Start embedded assembler ***

#line 1 "Src\\Systick.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___9_Systick_c_b672aa62____REV16|
#line 112 ".\\Inc\\core_cmInstr.h"
|__asm___9_Systick_c_b672aa62____REV16| PROC
#line 113

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___9_Systick_c_b672aa62____REVSH|
#line 130
|__asm___9_Systick_c_b672aa62____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
