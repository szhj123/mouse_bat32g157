; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\flash.o --asm_dir=.\Lst\ --list_dir=.\Lst\ --depend=.\obj\flash.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I.\Inc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\INC\NXP\LPC11Uxx -D__MICROLIB -D__UVISION_VERSION=536 -D__DEBUG_FLASH --omf_browse=.\obj\flash.crf Src\Flash.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  msAPI_Flash_PrepareSec PROC
;;;18     //***********************************************************************
;;;19     RetU32 msAPI_Flash_PrepareSec( U32 u32StartSecNum , U32 u32EndSecNum )
000000  b570              PUSH     {r4-r6,lr}
;;;20     {       
000002  b088              SUB      sp,sp,#0x20
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
;;;21     	U32 u32Status;
;;;22     	U32 u32BootResult[3];
;;;23     	U32 u32BootCommand[5];     
;;;24     
;;;25     	if(u32EndSecNum < u32StartSecNum)
000008  42a6              CMP      r6,r4
00000a  d201              BCS      |L1.16|
;;;26     	{     
;;;27     		u32Status = IAP_STA_INVALD_PARAM;
00000c  250c              MOVS     r5,#0xc
00000e  e008              B        |L1.34|
                  |L1.16|
;;;28     	}
;;;29     	else
;;;30     	{
;;;31     		u32BootCommand[0] = IAP_CMD_PREPARE_SECTORS;
000010  2032              MOVS     r0,#0x32
000012  9000              STR      r0,[sp,#0]
;;;32     		u32BootCommand[1] = u32StartSecNum;
000014  9401              STR      r4,[sp,#4]
;;;33     		u32BootCommand[2] = u32EndSecNum;
000016  9602              STR      r6,[sp,#8]
;;;34     
;;;35     		IAP_EXECUTE_CMD(u32BootCommand, u32BootResult);
000018  a905              ADD      r1,sp,#0x14
00001a  4668              MOV      r0,sp
00001c  4a81              LDR      r2,|L1.548|
00001e  4790              BLX      r2
;;;36     
;;;37     		u32Status = u32BootResult[0];
000020  9d05              LDR      r5,[sp,#0x14]
                  |L1.34|
;;;38     	}	
;;;39     	return u32Status;
000022  4628              MOV      r0,r5
;;;40     
;;;41     }
000024  b008              ADD      sp,sp,#0x20
000026  bd70              POP      {r4-r6,pc}
;;;42     //-----FlashCopyRAMToFlash-----
                          ENDP

                  msAPI_Flash_CopyRAM2Flash PROC
;;;52     
;;;53     RetU32 msAPI_Flash_CopyRAM2Flash( U32 dst , U32 src , U16 number)
000028  b570              PUSH     {r4-r6,lr}
;;;54     {
00002a  b088              SUB      sp,sp,#0x20
00002c  4604              MOV      r4,r0
00002e  460d              MOV      r5,r1
000030  4616              MOV      r6,r2
;;;55     	U32 u32BootCommand[5],u32BootResult[3];
;;;56     
;;;57     	u32BootCommand[0] = IAP_CMD_COPY_RAM_TO_FLASH;
000032  2033              MOVS     r0,#0x33
000034  9003              STR      r0,[sp,#0xc]
;;;58     	u32BootCommand[1] = dst;  
000036  9404              STR      r4,[sp,#0x10]
;;;59     	u32BootCommand[2] = src;	 
000038  9505              STR      r5,[sp,#0x14]
;;;60     	u32BootCommand[3] = number;	 
00003a  9606              STR      r6,[sp,#0x18]
;;;61     	u32BootCommand[4] = IAP_CLK;//0x00;
00003c  487a              LDR      r0,|L1.552|
00003e  9007              STR      r0,[sp,#0x1c]
;;;62     	
;;;63     	IAP_EXECUTE_CMD(u32BootCommand, u32BootResult);	
000040  4669              MOV      r1,sp
000042  a803              ADD      r0,sp,#0xc
000044  4a77              LDR      r2,|L1.548|
000046  4790              BLX      r2
;;;64     
;;;65     
;;;66     
;;;67     	return u32BootResult[0];
000048  9800              LDR      r0,[sp,#0]
;;;68     }
00004a  b008              ADD      sp,sp,#0x20
00004c  bd70              POP      {r4-r6,pc}
;;;69     //-----FlashEraseSec-----
                          ENDP

                  msAPI_Flash_EraseSec PROC
;;;79     //***********************************************************************
;;;80     RetU32 msAPI_Flash_EraseSec( U32 u32StartSecNum , U32 u32EndSecNum )
00004e  b570              PUSH     {r4-r6,lr}
;;;81     {
000050  b088              SUB      sp,sp,#0x20
000052  4604              MOV      r4,r0
000054  460e              MOV      r6,r1
;;;82     	U32 u32Status; 
;;;83     	U32 u32BootCommand[5],u32BootResult[3];
;;;84     
;;;85     	if (u32EndSecNum < u32StartSecNum)
000056  42a6              CMP      r6,r4
000058  d201              BCS      |L1.94|
;;;86     	{
;;;87     		u32Status = IAP_STA_INVALD_PARAM;
00005a  250c              MOVS     r5,#0xc
00005c  e00a              B        |L1.116|
                  |L1.94|
;;;88     	}
;;;89     	else
;;;90     	{
;;;91     		u32BootCommand[0] = IAP_CMD_ERASE_SECTORS;
00005e  2034              MOVS     r0,#0x34
000060  9003              STR      r0,[sp,#0xc]
;;;92     		u32BootCommand[1] = u32StartSecNum;
000062  9404              STR      r4,[sp,#0x10]
;;;93     		u32BootCommand[2] = u32EndSecNum;
000064  9605              STR      r6,[sp,#0x14]
;;;94     		u32BootCommand[3] = IAP_CLK;//0x00;
000066  4870              LDR      r0,|L1.552|
000068  9006              STR      r0,[sp,#0x18]
;;;95     
;;;96     		IAP_EXECUTE_CMD(u32BootCommand,u32BootResult);
00006a  4669              MOV      r1,sp
00006c  a803              ADD      r0,sp,#0xc
00006e  4a6d              LDR      r2,|L1.548|
000070  4790              BLX      r2
;;;97     		u32Status = u32BootResult[0];
000072  9d00              LDR      r5,[sp,#0]
                  |L1.116|
;;;98     	}
;;;99     	return u32Status;
000074  4628              MOV      r0,r5
;;;100    }
000076  b008              ADD      sp,sp,#0x20
000078  bd70              POP      {r4-r6,pc}
;;;101    #if 0
                          ENDP

                  nsAPI_Flash_EraseAppSector PROC
;;;223    
;;;224    void nsAPI_Flash_EraseAppSector(void)
00007a  b510              PUSH     {r4,lr}
;;;225    {
;;;226    	__disable_irq();
00007c  b672              CPSID    i
;;;227           
;;;228    	if(msAPI_Flash_PrepareSec(AppCode_StartSector,AppCode_EndSector)== IAP_STA_CMD_SUCCESS)
00007e  2107              MOVS     r1,#7
000080  2003              MOVS     r0,#3
000082  f7fffffe          BL       msAPI_Flash_PrepareSec
000086  2800              CMP      r0,#0
000088  d103              BNE      |L1.146|
;;;229    	{
;;;230    		msAPI_Flash_EraseSec(AppCode_StartSector,AppCode_EndSector);
00008a  2107              MOVS     r1,#7
00008c  2003              MOVS     r0,#3
00008e  f7fffffe          BL       msAPI_Flash_EraseSec
                  |L1.146|
;;;231    		//if(msAPI_Flash_EraseSec(AppCode_StartSector,AppCode_EndSector)== IAP_STA_CMD_SUCCESS)
;;;232    		//{
;;;233            //       _Flash_Debug_(xprintf("\r\n Erase AppSector is Ok",0));
;;;234    		//}
;;;235    	}
;;;236    	
;;;237    	__enable_irq();
000092  b662              CPSIE    i
;;;238    }
000094  bd10              POP      {r4,pc}
;;;239    
                          ENDP

                  _XRead PROC
;;;395    
;;;396    RetU8 _XRead(U32 u32Adr )
000096  4601              MOV      r1,r0
;;;397    {
;;;398       volatile U8 * u8Value;
;;;399       u8Value = (volatile U8*)u32Adr;
000098  460a              MOV      r2,r1
;;;400       return (*u8Value);
00009a  7810              LDRB     r0,[r2,#0]
;;;401    }
00009c  4770              BX       lr
;;;402    
                          ENDP

                  nsAPI_Flash_IsUpgrade PROC
;;;239    
;;;240    BootLean nsAPI_Flash_IsUpgrade(void)
00009e  b500              PUSH     {lr}
;;;241    {
;;;242    	U16 u16UpgradeID;
;;;243    
;;;244    	u16UpgradeID = _XRead(AppUpgrade_FlagAdr) << 8;
0000a0  207f              MOVS     r0,#0x7f
0000a2  0200              LSLS     r0,r0,#8
0000a4  f7fffffe          BL       _XRead
0000a8  0203              LSLS     r3,r0,#8
;;;245    	u16UpgradeID |= _XRead(AppUpgrade_FlagAdr+0x01);
0000aa  4860              LDR      r0,|L1.556|
0000ac  f7fffffe          BL       _XRead
0000b0  4303              ORRS     r3,r3,r0
;;;246    
;;;247    	_Flash_Debug_(xprintf("\r\n IsUpgrade = %x ",u16UpgradeID));
;;;248         
;;;249    	if(u16UpgradeID == AppReqUpgradeID)
0000b2  2bac              CMP      r3,#0xac
0000b4  d101              BNE      |L1.186|
;;;250    	return TRUE;
0000b6  2001              MOVS     r0,#1
                  |L1.184|
;;;251    	else	
;;;252    	return FALSE;
;;;253    }
0000b8  bd00              POP      {pc}
                  |L1.186|
0000ba  2000              MOVS     r0,#0                 ;252
0000bc  e7fc              B        |L1.184|
;;;254    
                          ENDP

                  nsAPI_Flash_AppPresent PROC
;;;257    
;;;258    BootLean nsAPI_Flash_AppPresent(void)
0000be  b570              PUSH     {r4-r6,lr}
;;;259    {
;;;260    	U8 u8AppUpgrade = TRUE;
0000c0  2601              MOVS     r6,#1
;;;261    	U16 u16AppID,u16AppupgradID;
;;;262    	
;;;263    	u16AppID	 = _XRead(AppID_Adr) << 8;
0000c2  2031              MOVS     r0,#0x31
0000c4  0200              LSLS     r0,r0,#8
0000c6  f7fffffe          BL       _XRead
0000ca  0204              LSLS     r4,r0,#8
;;;264    	u16AppID|= _XRead(AppID_Adr+0x01) << 0;
0000cc  4858              LDR      r0,|L1.560|
0000ce  f7fffffe          BL       _XRead
0000d2  4304              ORRS     r4,r4,r0
;;;265    
;;;266    	u16AppupgradID = _XRead(AppUpgrade_FlagAdr) << 8;
0000d4  207f              MOVS     r0,#0x7f
0000d6  0200              LSLS     r0,r0,#8
0000d8  f7fffffe          BL       _XRead
0000dc  0205              LSLS     r5,r0,#8
;;;267    	u16AppupgradID |= _XRead(AppUpgrade_FlagAdr+0x01) << 0;
0000de  4853              LDR      r0,|L1.556|
0000e0  f7fffffe          BL       _XRead
0000e4  4305              ORRS     r5,r5,r0
;;;268     
;;;269           _Flash_Debug_(xprintf("\r\n u16AppID = %x",u16AppID));
;;;270    	  
;;;271    	if(u16AppID == AppID)
0000e6  4853              LDR      r0,|L1.564|
0000e8  4284              CMP      r4,r0
0000ea  d108              BNE      |L1.254|
;;;272    	{
;;;273    		if(nsAPI_Flash_IsUpgrade())
0000ec  f7fffffe          BL       nsAPI_Flash_IsUpgrade
0000f0  2800              CMP      r0,#0
0000f2  d002              BEQ      |L1.250|
;;;274    		{
;;;275    			nsAPI_Flash_EraseAppSector(); 	   	
0000f4  f7fffffe          BL       nsAPI_Flash_EraseAppSector
0000f8  e008              B        |L1.268|
                  |L1.250|
;;;276    		}
;;;277    		else	
;;;278    		u8AppUpgrade = FALSE;
0000fa  2600              MOVS     r6,#0
0000fc  e006              B        |L1.268|
                  |L1.254|
;;;279    	}
;;;280    	else
;;;281    	{
;;;282    		if(u16AppID != 0xFFFF||u16AppupgradID == AppReqUpgradeID)
0000fe  484e              LDR      r0,|L1.568|
000100  4284              CMP      r4,r0
000102  d101              BNE      |L1.264|
000104  2dac              CMP      r5,#0xac
000106  d101              BNE      |L1.268|
                  |L1.264|
;;;283    		nsAPI_Flash_EraseAppSector();
000108  f7fffffe          BL       nsAPI_Flash_EraseAppSector
                  |L1.268|
;;;284    	}
;;;285    	_Flash_Debug_(xprintf("\r\n u8AppUpgrade = %x",u8AppUpgrade));
;;;286    	 
;;;287    	return u8AppUpgrade;
00010c  4630              MOV      r0,r6
;;;288    }
00010e  bd70              POP      {r4-r6,pc}
;;;289    
                          ENDP

                  nsAPI_Flash_Jump2AppSector PROC
;;;307    
;;;308    void nsAPI_Flash_Jump2AppSector(void)
000110  b510              PUSH     {r4,lr}
;;;309    {
;;;310    	typedef void Jump2BootloaderSector(void);
;;;311    	Jump2BootloaderSector *_Jump_ ;
;;;312    	_Jump_ = (Jump2BootloaderSector *)(AppCode_StartAdr|0x000000C1);
000112  4c47              LDR      r4,|L1.560|
000114  3c40              SUBS     r4,r4,#0x40
;;;313    	_Jump_(); 
000116  47a0              BLX      r4
;;;314    }
000118  bd10              POP      {r4,pc}
;;;315    
                          ENDP

                  nsAPI_Flash_BootBurn2Flash PROC
;;;316    void nsAPI_Flash_BootBurn2Flash(void)
00011a  b570              PUSH     {r4-r6,lr}
;;;317    {
;;;318    	U8 u8Length;
;;;319    	U16 i;/*,u16OffSet*/
;;;320    	u8Length =  8;//g_BootloaderSetting.CopyData2Buf[SIDX0];
00011c  2508              MOVS     r5,#8
;;;321    	
;;;322    	for(i = 0; i < u8Length; i++)
00011e  2400              MOVS     r4,#0
000120  e00c              B        |L1.316|
                  |L1.290|
;;;323    	{
;;;324    		g_BootloaderSetting.Buf2Flash[g_BootloaderSetting.AddrPointOffset] = g_Main_Setting.OutReport[i];//g_BootloaderSetting.CopyData2Buf[SIDX1+i];	
000122  4846              LDR      r0,|L1.572|
000124  5d01              LDRB     r1,[r0,r4]
000126  4846              LDR      r0,|L1.576|
000128  8842              LDRH     r2,[r0,#2]  ; g_BootloaderSetting
00012a  3010              ADDS     r0,r0,#0x10
00012c  5481              STRB     r1,[r0,r2]
;;;325    		g_BootloaderSetting.AddrPointOffset++; 			
00012e  3810              SUBS     r0,r0,#0x10
000130  8840              LDRH     r0,[r0,#2]  ; g_BootloaderSetting
000132  1c40              ADDS     r0,r0,#1
000134  4942              LDR      r1,|L1.576|
000136  8048              STRH     r0,[r1,#2]
000138  1c60              ADDS     r0,r4,#1              ;322
00013a  b284              UXTH     r4,r0                 ;322
                  |L1.316|
00013c  42ac              CMP      r4,r5                 ;322
00013e  dbf0              BLT      |L1.290|
;;;326    	}
;;;327    	//g_BootloaderSetting.AddrPointOffset = 257;
;;;328    	if(g_BootloaderSetting.AddrPointOffset >= 256)
000140  483f              LDR      r0,|L1.576|
000142  8840              LDRH     r0,[r0,#2]  ; g_BootloaderSetting
000144  28ff              CMP      r0,#0xff
000146  dd27              BLE      |L1.408|
;;;329    	{ 		
;;;330    		__disable_irq();
000148  b672              CPSID    i
;;;331    		
;;;332    		if(msAPI_Flash_PrepareSec(AppCode_StartSector,AppCode_EndSector) == IAP_STA_CMD_SUCCESS)	//Start burn
00014a  2107              MOVS     r1,#7
00014c  2003              MOVS     r0,#3
00014e  f7fffffe          BL       msAPI_Flash_PrepareSec
000152  2800              CMP      r0,#0
000154  d11f              BNE      |L1.406|
;;;333    		{
;;;334    			if(msAPI_Flash_CopyRAM2Flash((U32)AppCode_StartAdr+(g_BootloaderSetting.AddrPoint256*256),(U32)g_BootloaderSetting.Buf2Flash,0x100) ==  IAP_STA_CMD_SUCCESS)
000156  493a              LDR      r1,|L1.576|
000158  7809              LDRB     r1,[r1,#0]  ; g_BootloaderSetting
00015a  0209              LSLS     r1,r1,#8
00015c  2203              MOVS     r2,#3
00015e  0312              LSLS     r2,r2,#12
000160  1888              ADDS     r0,r1,r2
000162  22ff              MOVS     r2,#0xff
000164  3201              ADDS     r2,#1
000166  4936              LDR      r1,|L1.576|
000168  3110              ADDS     r1,r1,#0x10
00016a  f7fffffe          BL       msAPI_Flash_CopyRAM2Flash
00016e  2800              CMP      r0,#0
000170  d111              BNE      |L1.406|
;;;335    			{   
;;;336    				__enable_irq();
000172  b662              CPSIE    i
;;;337    				for( i = 0; i < R2FBUFSIZE; i++)		
000174  2400              MOVS     r4,#0
000176  e005              B        |L1.388|
                  |L1.376|
;;;338    				g_BootloaderSetting.Buf2Flash[i] = 0xFF;	
000178  21ff              MOVS     r1,#0xff
00017a  4831              LDR      r0,|L1.576|
00017c  3010              ADDS     r0,r0,#0x10
00017e  5501              STRB     r1,[r0,r4]
000180  1c60              ADDS     r0,r4,#1              ;337
000182  b284              UXTH     r4,r0                 ;337
                  |L1.388|
000184  2cff              CMP      r4,#0xff              ;337
000186  ddf7              BLE      |L1.376|
;;;339    
;;;340    				g_BootloaderSetting.AddrPointOffset = 0;
000188  2000              MOVS     r0,#0
00018a  492d              LDR      r1,|L1.576|
00018c  8048              STRH     r0,[r1,#2]
;;;341    				g_BootloaderSetting.AddrPoint256++;					
00018e  4608              MOV      r0,r1
000190  7800              LDRB     r0,[r0,#0]  ; g_BootloaderSetting
000192  1c40              ADDS     r0,r0,#1
000194  7008              STRB     r0,[r1,#0]
                  |L1.406|
;;;342    			}
;;;343    			//else{
;;;344    			
;;;345    			//_Flash_Debug_(xprintf("\r\n CopyRam2F is fault",0));	
;;;346    			//}
;;;347    		}
;;;348    		//else
;;;349    		// _Flash_Debug_(xprintf("\r\n PrepareSec is fault",0));	
;;;350    
;;;351    		__enable_irq();
000196  b662              CPSIE    i
                  |L1.408|
;;;352    	}		
;;;353    	g_BootloaderSetting.BufOffset = 0;
000198  2000              MOVS     r0,#0
00019a  4929              LDR      r1,|L1.576|
00019c  7048              STRB     r0,[r1,#1]
;;;354    	
;;;355    }
00019e  bd70              POP      {r4-r6,pc}
;;;356    
                          ENDP

                  Write_In_Flash PROC
;;;357    void Write_In_Flash(){
0001a0  b570              PUSH     {r4-r6,lr}
;;;358    		U8 u8Length;
;;;359    	U16 i;/*,u16OffSet*/
;;;360    	u8Length =  8;//g_BootloaderSetting.CopyData2Buf[SIDX0];
0001a2  2508              MOVS     r5,#8
;;;361    	
;;;362    	for(i = 0; i < u8Length; i++)
0001a4  2400              MOVS     r4,#0
0001a6  e00c              B        |L1.450|
                  |L1.424|
;;;363    	{
;;;364    		g_BootloaderSetting.Buf2Flash[g_BootloaderSetting.AddrPointOffset] = g_Main_Setting.OutReport[i];//g_BootloaderSetting.CopyData2Buf[SIDX1+i];	
0001a8  4824              LDR      r0,|L1.572|
0001aa  5d01              LDRB     r1,[r0,r4]
0001ac  4824              LDR      r0,|L1.576|
0001ae  8842              LDRH     r2,[r0,#2]  ; g_BootloaderSetting
0001b0  3010              ADDS     r0,r0,#0x10
0001b2  5481              STRB     r1,[r0,r2]
;;;365    		g_BootloaderSetting.AddrPointOffset++; 			
0001b4  3810              SUBS     r0,r0,#0x10
0001b6  8840              LDRH     r0,[r0,#2]  ; g_BootloaderSetting
0001b8  1c40              ADDS     r0,r0,#1
0001ba  4921              LDR      r1,|L1.576|
0001bc  8048              STRH     r0,[r1,#2]
0001be  1c60              ADDS     r0,r4,#1              ;362
0001c0  b284              UXTH     r4,r0                 ;362
                  |L1.450|
0001c2  42ac              CMP      r4,r5                 ;362
0001c4  dbf0              BLT      |L1.424|
;;;366    	}
;;;367    		//U8 j;
;;;368    		//j = 0x22;
;;;369    		//nsAPI_I2C_Write_Database(RM_BOOTLOADER_STATUS_ADR+1,&j,1);	//Update firmware Finish
;;;370    		__disable_irq();
0001c6  b672              CPSID    i
;;;371    			   
;;;372    		if(msAPI_Flash_PrepareSec(AppCode_StartSector,AppCode_EndSector) == IAP_STA_CMD_SUCCESS)	//Start burn
0001c8  2107              MOVS     r1,#7
0001ca  2003              MOVS     r0,#3
0001cc  f7fffffe          BL       msAPI_Flash_PrepareSec
0001d0  2800              CMP      r0,#0
0001d2  d10c              BNE      |L1.494|
;;;373    		{  			   
;;;374    			msAPI_Flash_CopyRAM2Flash((U32)AppCode_StartAdr+(g_BootloaderSetting.AddrPoint256*256),(U32)g_BootloaderSetting.Buf2Flash,0x100);
0001d4  491a              LDR      r1,|L1.576|
0001d6  7809              LDRB     r1,[r1,#0]  ; g_BootloaderSetting
0001d8  0209              LSLS     r1,r1,#8
0001da  2203              MOVS     r2,#3
0001dc  0312              LSLS     r2,r2,#12
0001de  1888              ADDS     r0,r1,r2
0001e0  22ff              MOVS     r2,#0xff
0001e2  3201              ADDS     r2,#1
0001e4  4916              LDR      r1,|L1.576|
0001e6  3110              ADDS     r1,r1,#0x10
0001e8  f7fffffe          BL       msAPI_Flash_CopyRAM2Flash
;;;375    			//if(msAPI_Flash_CopyRAM2Flash((U32)AppCode_StartAdr+(g_BootloaderSetting.AddrPoint256*256),(U32)g_BootloaderSetting.Buf2Flash,0x100) ==  IAP_STA_CMD_SUCCESS)
;;;376    			//{   
;;;377    				__enable_irq();
0001ec  b662              CPSIE    i
                  |L1.494|
;;;378    				//j = 0x22;
;;;379    				//nsAPI_I2C_Write_Database(RM_BOOTLOADER_STATUS_ADR+1,&j,1);	//Update firmware Finish
;;;380    				//for( i = 0; i < R2FBUFSIZE; i++)		
;;;381    				//g_BootloaderSetting.Buf2Flash[i] = 0xFF;	
;;;382    
;;;383    				//g_BootloaderSetting.AddrPointOffset = 0;
;;;384    				//g_BootloaderSetting.AddrPoint256++;					
;;;385    			//}
;;;386    			//else
;;;387    			//_Flash_Debug_(xprintf("\r\n CopyRam2F is fault",0));	
;;;388    		}
;;;389    		//else{
;;;390    		// _Flash_Debug_(xprintf("\r\n PrepareSec is fault",0));	
;;;391    		//}
;;;392    
;;;393    		__enable_irq(); 
0001ee  b662              CPSIE    i
;;;394    }
0001f0  bd70              POP      {r4-r6,pc}
;;;395    
                          ENDP

                  nsAPI_Flash_CopyData2Buf PROC
;;;403    
;;;404    void nsAPI_Flash_CopyData2Buf(U8 u8Lenth)
0001f2  b510              PUSH     {r4,lr}
;;;405    {
0001f4  4601              MOV      r1,r0
;;;406    	U8 i;
;;;407    	g_BootloaderSetting.CopyData2Buf[SIDX0] = u8Lenth;
0001f6  4a12              LDR      r2,|L1.576|
0001f8  7111              STRB     r1,[r2,#4]
;;;408    	for(i = 0; i < u8Lenth; i++)
0001fa  2000              MOVS     r0,#0
0001fc  e00e              B        |L1.540|
                  |L1.510|
;;;409    	{
;;;410    		g_BootloaderSetting.CopyData2Buf[SIDX1+g_BootloaderSetting.BufOffset] = \
0001fe  4a0f              LDR      r2,|L1.572|
000200  5c14              LDRB     r4,[r2,r0]
000202  4a0f              LDR      r2,|L1.576|
000204  7852              LDRB     r2,[r2,#1]  ; g_BootloaderSetting
000206  1c52              ADDS     r2,r2,#1
000208  4b0d              LDR      r3,|L1.576|
00020a  1d1b              ADDS     r3,r3,#4
00020c  549c              STRB     r4,[r3,r2]
;;;411    		g_Main_Setting.OutReport[SIDX0+i];
;;;412               
;;;413    		g_BootloaderSetting.BufOffset++;
00020e  1f1a              SUBS     r2,r3,#4
000210  7852              LDRB     r2,[r2,#1]  ; g_BootloaderSetting
000212  1c52              ADDS     r2,r2,#1
000214  1f1b              SUBS     r3,r3,#4
000216  705a              STRB     r2,[r3,#1]
000218  1c42              ADDS     r2,r0,#1              ;408
00021a  b2d0              UXTB     r0,r2                 ;408
                  |L1.540|
00021c  4288              CMP      r0,r1                 ;408
00021e  dbee              BLT      |L1.510|
;;;414    	}	
;;;415    }
000220  bd10              POP      {r4,pc}
                          ENDP

000222  0000              DCW      0x0000
                  |L1.548|
                          DCD      0x1fff1ff1
                  |L1.552|
                          DCD      0x0000bb80
                  |L1.556|
                          DCD      0x00007f01
                  |L1.560|
                          DCD      0x00003101
                  |L1.564|
                          DCD      0x00005a5a
                  |L1.568|
                          DCD      0x0000ffff
                  |L1.572|
                          DCD      g_Main_Setting+0x12
                  |L1.576|
                          DCD      g_BootloaderSetting

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  g_BootloaderSetting
                          %        276

;*** Start embedded assembler ***

#line 1 "Src\\Flash.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___7_Flash_c_df54b8de____REV16|
#line 112 ".\\Inc\\core_cmInstr.h"
|__asm___7_Flash_c_df54b8de____REV16| PROC
#line 113

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___7_Flash_c_df54b8de____REVSH|
#line 130
|__asm___7_Flash_c_df54b8de____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
