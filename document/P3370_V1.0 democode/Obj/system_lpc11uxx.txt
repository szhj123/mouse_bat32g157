; generated by ARM C/C++ Compiler, RVCT4.0 [Build 728]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\system_lpc11uxx.o --depend=.\Obj\system_lpc11uxx.d --cpu=Cortex-M0 --apcs=interwork -O0 -I.\Inc -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\NXP\LPC11Uxx -D__MICROLIB -D__DEBUG_FLASH --omf_browse=.\Obj\system_lpc11uxx.crf Src\system_LPC11Uxx.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  nsAPI_System_Init PROC
;;;48      */
;;;49     void nsAPI_System_Init(void)
000000  b510              PUSH     {r4,lr}
;;;50     {
;;;51     	U8 i;
;;;52     
;;;53     	LPC_SYSCON->PDRUNCFG &= ~BIT5;				//Power-up System Osc
000002  484f              LDR      r0,|L1.320|
000004  6b80              LDR      r0,[r0,#0x38]
000006  2120              MOVS     r1,#0x20
000008  4388              BICS     r0,r0,r1
00000a  494d              LDR      r1,|L1.320|
00000c  6388              STR      r0,[r1,#0x38]
;;;54     	LPC_SYSCON->SYSOSCCTRL = SYSOSCCTRL_Val;
00000e  2000              MOVS     r0,#0
000010  494c              LDR      r1,|L1.324|
000012  6208              STR      r0,[r1,#0x20]
;;;55     	for (i = 0; i < 200; i++) __NOP();
000014  2400              MOVS     r4,#0
000016  e002              B        |L1.30|
                  |L1.24|
000018  bf00              NOP      
00001a  1c60              ADDS     r0,r4,#1
00001c  b2c4              UXTB     r4,r0
                  |L1.30|
00001e  2cc8              CMP      r4,#0xc8
000020  dbfa              BLT      |L1.24|
;;;56     
;;;57     	LPC_SYSCON->SYSPLLCLKSEL = SYSPLLCLKSEL_Val;//Select PLL Input
000022  2001              MOVS     r0,#1
000024  4947              LDR      r1,|L1.324|
000026  3140              ADDS     r1,r1,#0x40
000028  6008              STR      r0,[r1,#0]
;;;58     	LPC_SYSCON->SYSPLLCLKUEN = 0x01;			//Update Clock Source
00002a  6048              STR      r0,[r1,#4]
;;;59     	LPC_SYSCON->SYSPLLCLKUEN = 0x00;			//Toggle Update Register
00002c  2000              MOVS     r0,#0
00002e  6048              STR      r0,[r1,#4]
;;;60     	LPC_SYSCON->SYSPLLCLKUEN = 0x01;
000030  2001              MOVS     r0,#1
000032  6048              STR      r0,[r1,#4]
;;;61     	while(!(LPC_SYSCON->SYSPLLCLKUEN & BIT0)){}	//Wait Until Updated
000034  bf00              NOP      
                  |L1.54|
000036  4843              LDR      r0,|L1.324|
000038  3040              ADDS     r0,r0,#0x40
00003a  6840              LDR      r0,[r0,#4]
00003c  07c0              LSLS     r0,r0,#31
00003e  0fc0              LSRS     r0,r0,#31
000040  d0f9              BEQ      |L1.54|
;;;62     
;;;63     	LPC_SYSCON->SYSPLLCTRL = SYSPLLCTRL_Val;	//Main Clock is PLL Out
000042  2023              MOVS     r0,#0x23
000044  493f              LDR      r1,|L1.324|
000046  6088              STR      r0,[r1,#8]
;;;64     	LPC_SYSCON->PDRUNCFG &= ~BIT7;				//Power-up SYSPLL
000048  483d              LDR      r0,|L1.320|
00004a  6b80              LDR      r0,[r0,#0x38]
00004c  2180              MOVS     r1,#0x80
00004e  4388              BICS     r0,r0,r1
000050  493b              LDR      r1,|L1.320|
000052  6388              STR      r0,[r1,#0x38]
;;;65     	while(!(LPC_SYSCON->SYSPLLSTAT & BIT0)){}	//Wait Until PLL Locked
000054  bf00              NOP      
                  |L1.86|
000056  483b              LDR      r0,|L1.324|
000058  68c0              LDR      r0,[r0,#0xc]
00005a  07c0              LSLS     r0,r0,#31
00005c  0fc0              LSRS     r0,r0,#31
00005e  d0fa              BEQ      |L1.86|
;;;66     
;;;67     	LPC_SYSCON->MAINCLKSEL = MAINCLKSEL_Val;	//Select PLL Clock Output
000060  2003              MOVS     r0,#3
000062  4938              LDR      r1,|L1.324|
000064  3140              ADDS     r1,r1,#0x40
000066  6308              STR      r0,[r1,#0x30]
;;;68     	LPC_SYSCON->MAINCLKUEN = 0x01;				//Update MCLK Clock Source
000068  2001              MOVS     r0,#1
00006a  6348              STR      r0,[r1,#0x34]
;;;69     	LPC_SYSCON->MAINCLKUEN = 0x00;				//Toggle Update Register
00006c  2000              MOVS     r0,#0
00006e  6348              STR      r0,[r1,#0x34]
;;;70     	LPC_SYSCON->MAINCLKUEN = 0x01;
000070  2001              MOVS     r0,#1
000072  6348              STR      r0,[r1,#0x34]
;;;71     	while (!(LPC_SYSCON->MAINCLKUEN & BIT0)){}	//Wait Until Updated
000074  bf00              NOP      
                  |L1.118|
000076  4833              LDR      r0,|L1.324|
000078  3040              ADDS     r0,r0,#0x40
00007a  6b40              LDR      r0,[r0,#0x34]
00007c  07c0              LSLS     r0,r0,#31
00007e  0fc0              LSRS     r0,r0,#31
000080  d0f9              BEQ      |L1.118|
;;;72     
;;;73     	LPC_SYSCON->SYSAHBCLKDIV  = SYSAHBCLKDIV_Val;
000082  2001              MOVS     r0,#1
000084  492f              LDR      r1,|L1.324|
000086  3140              ADDS     r1,r1,#0x40
000088  6388              STR      r0,[r1,#0x38]
;;;74     	LPC_SYSCON->PDRUNCFG &= ~BIT10;				//Power-up USB PHY
00008a  482d              LDR      r0,|L1.320|
00008c  6b80              LDR      r0,[r0,#0x38]
00008e  1509              ASRS     r1,r1,#20
000090  4388              BICS     r0,r0,r1
000092  492b              LDR      r1,|L1.320|
000094  6388              STR      r0,[r1,#0x38]
;;;75     	LPC_SYSCON->PDRUNCFG &= ~BIT8;				//Power-up USB PLL
000096  4608              MOV      r0,r1
000098  6b80              LDR      r0,[r0,#0x38]
00009a  1589              ASRS     r1,r1,#22
00009c  4388              BICS     r0,r0,r1
00009e  4928              LDR      r1,|L1.320|
0000a0  6388              STR      r0,[r1,#0x38]
;;;76     	LPC_SYSCON->USBPLLCLKSEL = USBPLLCLKSEL_Val;//Select PLL Input
0000a2  2001              MOVS     r0,#1
0000a4  4927              LDR      r1,|L1.324|
0000a6  3140              ADDS     r1,r1,#0x40
0000a8  6088              STR      r0,[r1,#8]
;;;77     	LPC_SYSCON->USBPLLCLKUEN = 0x01;			//Update Clock Source
0000aa  60c8              STR      r0,[r1,#0xc]
;;;78     	LPC_SYSCON->USBPLLCLKUEN = 0x00;			//Toggle Update Register
0000ac  2000              MOVS     r0,#0
0000ae  60c8              STR      r0,[r1,#0xc]
;;;79     	LPC_SYSCON->USBPLLCLKUEN = 0x01;
0000b0  2001              MOVS     r0,#1
0000b2  60c8              STR      r0,[r1,#0xc]
;;;80     
;;;81     	while (!(LPC_SYSCON->USBPLLCLKUEN & BIT0)){}//Wait Until Updated
0000b4  bf00              NOP      
                  |L1.182|
0000b6  4823              LDR      r0,|L1.324|
0000b8  3040              ADDS     r0,r0,#0x40
0000ba  68c0              LDR      r0,[r0,#0xc]
0000bc  07c0              LSLS     r0,r0,#31
0000be  0fc0              LSRS     r0,r0,#31
0000c0  d0f9              BEQ      |L1.182|
;;;82     	LPC_SYSCON->USBPLLCTRL = USBPLLCTRL_Val;
0000c2  2023              MOVS     r0,#0x23
0000c4  491f              LDR      r1,|L1.324|
0000c6  6108              STR      r0,[r1,#0x10]
;;;83     
;;;84     	while (!(LPC_SYSCON->USBPLLSTAT & BIT0)){}	//Wait Until PLL Locked
0000c8  bf00              NOP      
                  |L1.202|
0000ca  481e              LDR      r0,|L1.324|
0000cc  6940              LDR      r0,[r0,#0x14]
0000ce  07c0              LSLS     r0,r0,#31
0000d0  0fc0              LSRS     r0,r0,#31
0000d2  d0fa              BEQ      |L1.202|
;;;85     	LPC_SYSCON->USBCLKSEL = 0x00;				//Select USB PLL
0000d4  2000              MOVS     r0,#0
0000d6  491b              LDR      r1,|L1.324|
0000d8  31c0              ADDS     r1,r1,#0xc0
0000da  6008              STR      r0,[r1,#0]
;;;86     	LPC_SYSCON->USBCLKSEL = USBCLKSEL_Val;		//Select USB Clock
0000dc  6008              STR      r0,[r1,#0]
;;;87     	LPC_SYSCON->USBCLKDIV = USBCLKDIV_Val;		//Set USB clock divider
0000de  2001              MOVS     r0,#1
0000e0  6088              STR      r0,[r1,#8]
;;;88     
;;;89     	//System clock to the IOCON needs to be enabled or
;;;90     	//most of the I/O related peripherals won't work.
;;;91     	LPC_SYSCON->SYSAHBCLKCTRL |= BIT16;
0000e2  4818              LDR      r0,|L1.324|
0000e4  3080              ADDS     r0,r0,#0x80
0000e6  6800              LDR      r0,[r0,#0]
0000e8  2101              MOVS     r1,#1
0000ea  0409              LSLS     r1,r1,#16
0000ec  4308              ORRS     r0,r0,r1
0000ee  4915              LDR      r1,|L1.324|
0000f0  3180              ADDS     r1,r1,#0x80
0000f2  6008              STR      r0,[r1,#0]
;;;92     
;;;93     	SystemCoreClock = (__SYS_OSC_CLK * ((LPC_SYSCON->SYSPLLCTRL & 0x01F) + 1));
0000f4  4813              LDR      r0,|L1.324|
0000f6  6880              LDR      r0,[r0,#8]
0000f8  06c0              LSLS     r0,r0,#27
0000fa  0ec0              LSRS     r0,r0,#27
0000fc  1c40              ADDS     r0,r0,#1
0000fe  4912              LDR      r1,|L1.328|
000100  4348              MULS     r0,r1,r0
000102  4912              LDR      r1,|L1.332|
000104  6008              STR      r0,[r1,#0]  ; SystemCoreClock
;;;94     	SystemCoreClock /= LPC_SYSCON->SYSAHBCLKDIV;
000106  480f              LDR      r0,|L1.324|
000108  3040              ADDS     r0,r0,#0x40
00010a  6b81              LDR      r1,[r0,#0x38]
00010c  480f              LDR      r0,|L1.332|
00010e  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
000110  f7fffffe          BL       __aeabi_uidivmod
000114  490d              LDR      r1,|L1.332|
000116  6008              STR      r0,[r1,#0]  ; SystemCoreClock
;;;95     
;;;96     	nsAPI_UART_Init(BR);
000118  20e1              MOVS     r0,#0xe1
00011a  0240              LSLS     r0,r0,#9
00011c  f7fffffe          BL       nsAPI_UART_Init
;;;97     	nsAPI_I2C_Init();
000120  f7fffffe          BL       nsAPI_I2C_Init
;;;98     	nsAPI_GPIO_Init();
000124  f7fffffe          BL       nsAPI_GPIO_Init
;;;99     	nsAPI_USB_Init();							// USB Initialization
000128  f7fffffe          BL       nsAPI_USB_Init
;;;100    	nsAPI_Timer16_Init(Timer16_0,1); 			// ms resolution setup
00012c  2101              MOVS     r1,#1
00012e  2000              MOVS     r0,#0
000130  f7fffffe          BL       nsAPI_Timer16_Init
;;;101    	nsAPI_SysTick_Init();
000134  f7fffffe          BL       nsAPI_SysTick_Init
;;;102    	nsAPI_SSP_Init();
000138  f7fffffe          BL       nsAPI_SSP_Init
;;;103    	//xprintf("\r\n SystemCoreClock = %d MHz", SystemCoreClock / 1000000UL);
;;;104    }
00013c  bd10              POP      {r4,pc}
                          ENDP

00013e  0000              DCW      0x0000
                  |L1.320|
                          DCD      0x40048200
                  |L1.324|
                          DCD      0x40048000
                  |L1.328|
                          DCD      0x00b71b00
                  |L1.332|
                          DCD      SystemCoreClock

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "Src\\system_LPC11Uxx.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___17_system_LPC11Uxx_c_b7edaa7f____REV16|
#line 112 ".\\Inc\\core_cmInstr.h"
|__asm___17_system_LPC11Uxx_c_b7edaa7f____REV16| PROC
#line 113

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___17_system_LPC11Uxx_c_b7edaa7f____REVSH|
#line 130
|__asm___17_system_LPC11Uxx_c_b7edaa7f____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
