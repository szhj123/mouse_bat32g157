; generated by ARM C/C++ Compiler, RVCT4.0 [Build 728]
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\systick.o --depend=.\Obj\systick.d --cpu=Cortex-M0 --apcs=interwork -O0 -I.\Inc -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\NXP\LPC11Uxx -D__MICROLIB -D__DEBUG_FLASH --omf_browse=.\Obj\systick.crf Src\Systick.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  SysTick_Handler PROC
;;;10      
;;;11     void SysTick_Handler(void)
000000  b510              PUSH     {r4,lr}
;;;12     {    
;;;13     	if(g_Timer32_LED_Setting.LEDStatusType == LED_BREATHING)
000002  483f              LDR      r0,|L1.256|
000004  7800              LDRB     r0,[r0,#0]  ; g_Timer32_LED_Setting
000006  2801              CMP      r0,#1
000008  d10a              BNE      |L1.32|
;;;14     	{	
;;;15     		if((g_Timer32_LED_Setting.BreathingStepStatus & BREATHING_STEP_RESETTING) == BREATHING_STEP_RESETTING)  
00000a  483d              LDR      r0,|L1.256|
00000c  78c0              LDRB     r0,[r0,#3]  ; g_Timer32_LED_Setting
00000e  07c0              LSLS     r0,r0,#31
000010  0fc0              LSRS     r0,r0,#31
000012  2801              CMP      r0,#1
000014  d102              BNE      |L1.28|
;;;16     		nsAPI_Timer32PWM_Breathing_ReSetting(15);
000016  200f              MOVS     r0,#0xf
000018  f7fffffe          BL       nsAPI_Timer32PWM_Breathing_ReSetting
                  |L1.28|
;;;17     
;;;18     		NDrv_Timer32PWM_Breathing();	
00001c  f7fffffe          BL       NDrv_Timer32PWM_Breathing
                  |L1.32|
;;;19     	}
;;;20     }
000020  bd10              POP      {r4,pc}
;;;21     
                          ENDP

                  nsAPI_SysTick_Init PROC
;;;22     
;;;23     void nsAPI_SysTick_Init(void)
000022  b510              PUSH     {r4,lr}
;;;24     {
;;;25     	NVIC_DisableIRQ(SysTick_IRQn);
000024  bf00              NOP      
000026  201f              MOVS     r0,#0x1f
000028  4601              MOV      r1,r0
00002a  2001              MOVS     r0,#1
00002c  4088              LSLS     r0,r0,r1
00002e  4935              LDR      r1,|L1.260|
000030  6008              STR      r0,[r1,#0]
000032  bf00              NOP      
;;;26     
;;;27     	if(SysTick_Config(SYSTICK_TIMER*10/*ms*/))/* Setup SysTick Timer for 10 msec interrupts  */		
000034  217d              MOVS     r1,#0x7d
000036  00c9              LSLS     r1,r1,#3
000038  4833              LDR      r0,|L1.264|
00003a  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
00003c  f7fffffe          BL       __aeabi_uidivmod
000040  210a              MOVS     r1,#0xa
000042  4604              MOV      r4,r0
000044  434c              MULS     r4,r1,r4
000046  4831              LDR      r0,|L1.268|
000048  4284              CMP      r4,r0
00004a  d901              BLS      |L1.80|
00004c  2001              MOVS     r0,#1
00004e  e00f              B        |L1.112|
                  |L1.80|
000050  0220              LSLS     r0,r4,#8
000052  0a00              LSRS     r0,r0,#8
000054  1e40              SUBS     r0,r0,#1
000056  492e              LDR      r1,|L1.272|
000058  6148              STR      r0,[r1,#0x14]
00005a  2107              MOVS     r1,#7
00005c  2000              MOVS     r0,#0
00005e  43c0              MVNS     r0,r0
000060  f7fffffe          BL       NVIC_SetPriority
000064  2000              MOVS     r0,#0
000066  492a              LDR      r1,|L1.272|
000068  6188              STR      r0,[r1,#0x18]
00006a  2007              MOVS     r0,#7
00006c  6108              STR      r0,[r1,#0x10]
00006e  2000              MOVS     r0,#0
                  |L1.112|
000070  2800              CMP      r0,#0
000072  d001              BEQ      |L1.120|
;;;28     	{
;;;29     		while(1){}/*Systick Error*/
000074  bf00              NOP      
                  |L1.118|
000076  e7fe              B        |L1.118|
                  |L1.120|
;;;30     	}
;;;31     	
;;;32     	NVIC_EnableIRQ(SysTick_IRQn);	
000078  bf00              NOP      
00007a  201f              MOVS     r0,#0x1f
00007c  4601              MOV      r1,r0
00007e  2001              MOVS     r0,#1
000080  4088              LSLS     r0,r0,r1
000082  4920              LDR      r1,|L1.260|
000084  3980              SUBS     r1,r1,#0x80
000086  6008              STR      r0,[r1,#0]
000088  bf00              NOP      
;;;33     }
00008a  bd10              POP      {r4,pc}
;;;34     
                          ENDP

                  NVIC_SetPriority PROC
;;;606     */
;;;607    static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
00008c  b510              PUSH     {r4,lr}
;;;608    {
;;;609      if(IRQn < 0) {
00008e  2800              CMP      r0,#0
000090  da19              BGE      |L1.198|
;;;610        SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) | 
000092  4a20              LDR      r2,|L1.276|
000094  0703              LSLS     r3,r0,#28
000096  0f1b              LSRS     r3,r3,#28
000098  3b08              SUBS     r3,r3,#8
00009a  089b              LSRS     r3,r3,#2
00009c  009b              LSLS     r3,r3,#2
00009e  58d2              LDR      r2,[r2,r3]
0000a0  0783              LSLS     r3,r0,#30
0000a2  0edc              LSRS     r4,r3,#27
0000a4  23ff              MOVS     r3,#0xff
0000a6  40a3              LSLS     r3,r3,r4
0000a8  439a              BICS     r2,r2,r3
0000aa  074b              LSLS     r3,r1,#29
0000ac  0e1b              LSRS     r3,r3,#24
0000ae  0784              LSLS     r4,r0,#30
0000b0  0ee4              LSRS     r4,r4,#27
0000b2  40a3              LSLS     r3,r3,r4
0000b4  431a              ORRS     r2,r2,r3
0000b6  4b17              LDR      r3,|L1.276|
0000b8  0704              LSLS     r4,r0,#28
0000ba  0f24              LSRS     r4,r4,#28
0000bc  3c08              SUBS     r4,r4,#8
0000be  08a4              LSRS     r4,r4,#2
0000c0  00a4              LSLS     r4,r4,#2
0000c2  511a              STR      r2,[r3,r4]
0000c4  e01a              B        |L1.252|
                  |L1.198|
;;;611            (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
;;;612      else {
;;;613        NVIC->IPR[_IP_IDX(IRQn)] = (NVIC->IPR[_IP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
0000c6  4a0f              LDR      r2,|L1.260|
0000c8  3a80              SUBS     r2,r2,#0x80
0000ca  2303              MOVS     r3,#3
0000cc  021b              LSLS     r3,r3,#8
0000ce  18d2              ADDS     r2,r2,r3
0000d0  0883              LSRS     r3,r0,#2
0000d2  009b              LSLS     r3,r3,#2
0000d4  58d3              LDR      r3,[r2,r3]
0000d6  0782              LSLS     r2,r0,#30
0000d8  0ed4              LSRS     r4,r2,#27
0000da  22ff              MOVS     r2,#0xff
0000dc  40a2              LSLS     r2,r2,r4
0000de  4393              BICS     r3,r3,r2
0000e0  074a              LSLS     r2,r1,#29
0000e2  0e12              LSRS     r2,r2,#24
0000e4  0784              LSLS     r4,r0,#30
0000e6  0ee4              LSRS     r4,r4,#27
0000e8  40a2              LSLS     r2,r2,r4
0000ea  4313              ORRS     r3,r3,r2
0000ec  4a05              LDR      r2,|L1.260|
0000ee  3a80              SUBS     r2,r2,#0x80
0000f0  2403              MOVS     r4,#3
0000f2  0224              LSLS     r4,r4,#8
0000f4  1912              ADDS     r2,r2,r4
0000f6  0884              LSRS     r4,r0,#2
0000f8  00a4              LSLS     r4,r4,#2
0000fa  5113              STR      r3,[r2,r4]
                  |L1.252|
;;;614            (((priority << (8 - __NVIC_PRIO_BITS)) & 0xFF) << _BIT_SHIFT(IRQn)); }
;;;615    }
0000fc  bd10              POP      {r4,pc}
;;;616    
                          ENDP

0000fe  0000              DCW      0x0000
                  |L1.256|
                          DCD      g_Timer32_LED_Setting
                  |L1.260|
                          DCD      0xe000e180
                  |L1.264|
                          DCD      SystemCoreClock
                  |L1.268|
                          DCD      0x00ffffff
                  |L1.272|
                          DCD      0xe000e000
                  |L1.276|
                          DCD      0xe000ed1c

;*** Start embedded assembler ***

#line 1 "Src\\Systick.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_Systick_c_b672aa62____REV16|
#line 112 ".\\Inc\\core_cmInstr.h"
|__asm___9_Systick_c_b672aa62____REV16| PROC
#line 113

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_Systick_c_b672aa62____REVSH|
#line 130
|__asm___9_Systick_c_b672aa62____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
