<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Obj\PixArtGamingMice.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Obj\PixArtGamingMice.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Tue Dec 06 16:10:46 2022
<BR><P>
<H3>Maximum Stack Usage =        104 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
nsAPI_USB_EndPoint0 &rArr; nsAPI_SSP_Sensor_Init &rArr; nsAPI_USB_WriteEP &rArr; USB_GetEPCmdStatusPtr
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[10]">Reserved_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">Reserved_IRQHandler</a><BR>
 <LI><a href="#[1b]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1b]">ADC_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[1d]">BOD_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[6]">FLEX_INT0_IRQHandler</a> from gpio.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[7]">FLEX_INT1_IRQHandler</a> from gpio.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[8]">FLEX_INT2_IRQHandler</a> from gpio.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[9]">FLEX_INT3_IRQHandler</a> from gpio.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[a]">FLEX_INT4_IRQHandler</a> from gpio.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[b]">FLEX_INT5_IRQHandler</a> from gpio.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[c]">FLEX_INT6_IRQHandler</a> from gpio.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[d]">FLEX_INT7_IRQHandler</a> from gpio.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[1e]">FMC_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[e]">GINT0_IRQHandler</a> from gpio.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[f]">GINT1_IRQHandler</a> from gpio.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[12]">I2C_IRQHandler</a> from i2c.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[10]">Reserved_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced 7 times from startup_lpc11uxx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[17]">SSP0_IRQHandler</a> from ssp.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[11]">SSP1_IRQHandler</a> from ssp.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from systick.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[13]">TIMER16_0_IRQHandler</a> from timer16.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[14]">TIMER16_1_IRQHandler</a> from timer16.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[15]">TIMER32_0_IRQHandler</a> from timer32.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[16]">TIMER32_1_IRQHandler</a> from timer32.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[18]">UART_IRQHandler</a> from uart.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[1f]">USBWakeup_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[1a]">USB_FIQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[19]">USB_IRQHandler</a> from usbhw.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[1c]">WDT_IRQHandler</a> from startup_lpc11uxx.o(.text) referenced from startup_lpc11uxx.o(RESET)
 <LI><a href="#[21]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_lpc11uxx.o(.text)
 <LI><a href="#[20]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[22]">nsAPI_USB_EndPoint0</a> from usbcore.o(.text) referenced from usbuser.o(.constdata)
 <LI><a href="#[23]">nsAPI_USB_EndPoint1</a> from usbuser.o(.text) referenced from usbuser.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[21]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(.text)
</UL>
<P><STRONG><a name="[a0]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[24]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[9d]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[a1]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[a2]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[a3]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[26]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_fini_ (Weak Reference)
</UL>

<P><STRONG><a name="[a4]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[a5]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[6]"></a>FLEX_INT0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>FLEX_INT1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>FLEX_INT2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLEX_INT3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>FLEX_INT4_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>FLEX_INT5_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>FLEX_INT6_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>FLEX_INT7_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>GINT0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gpio.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>GINT1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gpio.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>NDrv_GPIO_SetDir</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = NDrv_GPIO_SetDir
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_GPIO_Init
</UL>

<P><STRONG><a name="[28]"></a>nsAPI_GPIO_Init</STRONG> (Thumb, 736 bytes, Stack size 4 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nsAPI_GPIO_Init &rArr; NDrv_GPIO_SetDir
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_GPIO_SetDir
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_System_Init
</UL>

<P><STRONG><a name="[2b]"></a>NDrv_GPIO_SetBitValue</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = NDrv_GPIO_SetBitValue
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Sensor_Hard_Reset
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_LoadSROM
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Monitor
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Write
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Read
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Init
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Init
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_MouseScanButton
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_GPIO_LEDSetting
</UL>

<P><STRONG><a name="[2d]"></a>nsAPI_GPIO_GetPinValue</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nsAPI_GPIO_GetPinValue
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Monitor
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Z_Wheel
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_MouseScanButton
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_GPIO_Get_QIE
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_GPIO_ScanButton
</UL>

<P><STRONG><a name="[2a]"></a>nsAPI_GPIO_LEDSetting</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_GPIO_SetBitValue
</UL>

<P><STRONG><a name="[2c]"></a>nsAPI_GPIO_ScanButton</STRONG> (Thumb, 188 bytes, Stack size 12 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_GPIO_GetPinValue
</UL>

<P><STRONG><a name="[30]"></a>nsAPI_GPIO_ChangingIndex</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_GPIO_MouseButtonMonitor
</UL>

<P><STRONG><a name="[2e]"></a>nsAPI_GPIO_MouseButtonMonitor</STRONG> (Thumb, 232 bytes, Stack size 8 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = nsAPI_GPIO_MouseButtonMonitor &rArr; nsAPI_MouseScanButton &rArr; nsAPI_SSP_Sensor_Write &rArr; NDrv_GPIO_SetBitValue
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_MouseScanButton
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Main_GetInMouseButtonReport
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_GPIO_ChangingIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[32]"></a>nsAPI_GPIO_Get_QIE</STRONG> (Thumb, 226 bytes, Stack size 12 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_GPIO_GetPinValue
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_GPIO_QIE_Monitor
</UL>

<P><STRONG><a name="[33]"></a>nsAPI_GPIO_QIE_Monitor</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Main_GetInMouseQIEReport
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_GPIO_Get_QIE
</UL>

<P><STRONG><a name="[a6]"></a>nsAPI_GPIO_MacroKey_Monitor</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>HID_GetReport</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, hiduser.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Main_GetInReport
</UL>

<P><STRONG><a name="[37]"></a>HID_SetReport</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, hiduser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HID_SetReport
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetOutReport
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
</UL>

<P><STRONG><a name="[60]"></a>HID_GetIdle</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hiduser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
</UL>

<P><STRONG><a name="[61]"></a>HID_SetIdle</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hiduser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
</UL>

<P><STRONG><a name="[62]"></a>HID_GetProtocol</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hiduser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
</UL>

<P><STRONG><a name="[63]"></a>HID_SetProtocol</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hiduser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
</UL>

<P><STRONG><a name="[39]"></a>nsAPI_System_Init</STRONG> (Thumb, 328 bytes, Stack size 8 bytes, system_lpc11uxx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = nsAPI_System_Init &rArr; nsAPI_UART_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_Init
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_UART_Init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Timer16_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SysTick_Init
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_I2C_Init
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_GPIO_Init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13]"></a>TIMER16_0_IRQHandler</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, timer16.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIMER16_1_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, timer16.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>NDrv_Timer16_Enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, timer16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Timer16_Init
</UL>

<P><STRONG><a name="[42]"></a>NDrv_Timer16_Reset</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, timer16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Timer16_Init
</UL>

<P><STRONG><a name="[a7]"></a>NDrv_Timer16_Disable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, timer16.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>nsAPI_Timer16_Init</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, timer16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = nsAPI_Timer16_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_Timer16_Reset
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_Timer16_Enable
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_System_Init
</UL>

<P><STRONG><a name="[15]"></a>TIMER32_0_IRQHandler</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, timer32.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIMER32_1_IRQHandler</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, timer32.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>NDrv_Timer32_Enable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, timer32.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Timer32PWM_Init
</UL>

<P><STRONG><a name="[46]"></a>NDrv_Timer32_Disable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, timer32.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Timer32PWM_Init
</UL>

<P><STRONG><a name="[49]"></a>NDrv_Timer32_Reset</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, timer32.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer32
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Timer32PWM_Init
</UL>

<P><STRONG><a name="[48]"></a>nsAPI_Timer32_Setting_MatchFunction</STRONG> (Thumb, 338 bytes, Stack size 8 bytes, timer32.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Timer32PWM_Init
</UL>

<P><STRONG><a name="[47]"></a>nsAPI_Timer32PWM_Breathing_ReSetting</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, timer32.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Timer32PWM_Init
</UL>

<P><STRONG><a name="[45]"></a>nsAPI_Timer32PWM_Init</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, timer32.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Timer32PWM_Breathing_ReSetting
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Timer32_Setting_MatchFunction
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_Timer32_Reset
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_Timer32_Disable
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_Timer32_Enable
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[a8]"></a>NDrv_Timer32PWM_ReSettingMatch</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, timer32.o(.text), UNUSED)

<P><STRONG><a name="[a9]"></a>NDrv_Timer32PWM_Breathing</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, timer32.o(.text), UNUSED)

<P><STRONG><a name="[4b]"></a>init_timer32</STRONG> (Thumb, 98 bytes, Stack size 4 bytes, timer32.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_Timer32_Reset
</UL>

<P><STRONG><a name="[18]"></a>UART_IRQHandler</STRONG> (Thumb, 254 bytes, Stack size 12 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>nsAPI_UART_Init</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = nsAPI_UART_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_System_Init
</UL>

<P><STRONG><a name="[4d]"></a>nsAPI_UART_Send</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xprintf
</UL>

<P><STRONG><a name="[4c]"></a>xprintf</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_UART_Send
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[7f]"></a>nsAPI_USB_ResetCore</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, usbcore.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Reset_Event
</UL>

<P><STRONG><a name="[4e]"></a>nsAPI_USB_SetupStage</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = nsAPI_USB_SetupStage &rArr; nsAPI_USB_ReadSetupEP &rArr; USB_GetEPCmdStatusPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ReadSetupEP
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
</UL>

<P><STRONG><a name="[50]"></a>nsAPI_USB_DataInStage</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = nsAPI_USB_DataInStage &rArr; nsAPI_USB_WriteEP &rArr; USB_GetEPCmdStatusPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_WriteEP
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
</UL>

<P><STRONG><a name="[52]"></a>nsAPI_USB_DataOutStage</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = nsAPI_USB_DataOutStage &rArr; nsAPI_USB_ReadEP &rArr; USB_GetEPCmdStatusPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ReadEP
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
</UL>

<P><STRONG><a name="[54]"></a>nsAPI_USB_StatusInStage</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = nsAPI_USB_StatusInStage &rArr; nsAPI_USB_WriteEP &rArr; USB_GetEPCmdStatusPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_WriteEP
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
</UL>

<P><STRONG><a name="[55]"></a>nsAPI_USB_StatusOutStage</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = nsAPI_USB_StatusOutStage &rArr; nsAPI_USB_ReadEP &rArr; USB_GetEPCmdStatusPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ReadEP
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
</UL>

<P><STRONG><a name="[56]"></a>nsAPI_USBCore_Stall_i</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = nsAPI_USBCore_Stall_i &rArr; nsAPI_USB_SetStallEP &rArr; nsAPI_USB_DeactivateEP
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_SetStallEP
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
</UL>

<P><STRONG><a name="[22]"></a>nsAPI_USB_EndPoint0</STRONG> (Thumb, 1662 bytes, Stack size 16 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = nsAPI_USB_EndPoint0 &rArr; nsAPI_SSP_Sensor_Init &rArr; nsAPI_USB_WriteEP &rArr; USB_GetEPCmdStatusPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wnDrv_Usb_ClrGetReqStatus
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_SetStallEP
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_SetAddress
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_Configure_Event
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ClrStallEP
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Write
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Read
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msAPI_Flash_PrepareSec
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msAPI_Flash_EraseSec
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msAPI_Flash_CopyRAM2Flash
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ReqSetInterface
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ReqSetConfiguration
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ReqSetClrFeature
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ReqGetStatus
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ReqGetDescriptor
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USBCore_Stall_i
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_StatusOutStage
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_StatusInStage
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_DataOutStage
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_DataInStage
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_SetupStage
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_SetProtocol
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_GetProtocol
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_SetIdle
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_GetIdle
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_SetReport
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_GPIO_SetBitValue
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbuser.o(.constdata)
</UL>
<P><STRONG><a name="[71]"></a>NDrv_USB_IOClkConfig</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_Init
</UL>

<P><STRONG><a name="[6d]"></a>USB_GetEPCmdStatusPtr</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_GetEPCmdStatusPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPAdr
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wnDrv_Usb_EP_Status
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wnDrv_Usb_ClrGetReqStatus
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_WriteEP
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_SetStallEP
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ResetEP
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ReadSetupEP
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ReadEP
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EnableEP
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_DisableEP
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ClrStallEP
</UL>

<P><STRONG><a name="[70]"></a>NDrv_USB_EPInit</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NDrv_USB_EPInit
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_USB_Reset
</UL>

<P><STRONG><a name="[72]"></a>NDrv_USB_Connect</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_Init
</UL>

<P><STRONG><a name="[6f]"></a>NDrv_USB_Reset</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = NDrv_USB_Reset &rArr; NDrv_USB_EPInit
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_USB_EPInit
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IRQHandler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_Init
</UL>

<P><STRONG><a name="[3d]"></a>nsAPI_USB_Init</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nsAPI_USB_Init &rArr; NDrv_USB_Reset &rArr; NDrv_USB_EPInit
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_USB_Reset
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_USB_Connect
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_USB_IOClkConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_System_Init
</UL>

<P><STRONG><a name="[7a]"></a>USB_Suspend</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IRQHandler
</UL>

<P><STRONG><a name="[7c]"></a>USB_Resume</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IRQHandler
</UL>

<P><STRONG><a name="[aa]"></a>USB_WakeUp</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usbhw.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>NDrv_USB_WakeUpCfg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ReqSetClrFeature
</UL>

<P><STRONG><a name="[6b]"></a>nsAPI_USB_SetAddress</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
</UL>

<P><STRONG><a name="[9f]"></a>NDrv_USB_Configure</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ReqSetConfiguration
</UL>

<P><STRONG><a name="[73]"></a>nsAPI_USB_DeactivateEP</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nsAPI_USB_DeactivateEP
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPAdr
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_SetStallEP
</UL>

<P><STRONG><a name="[74]"></a>nsAPI_USB_EnableEP</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nsAPI_USB_EnableEP &rArr; USB_GetEPCmdStatusPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetEPCmdStatusPtr
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPAdr
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ReqSetInterface
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ReqSetConfiguration
</UL>

<P><STRONG><a name="[75]"></a>nsAPI_USB_DisableEP</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nsAPI_USB_DisableEP &rArr; USB_GetEPCmdStatusPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetEPCmdStatusPtr
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPAdr
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ReqSetInterface
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ReqSetConfiguration
</UL>

<P><STRONG><a name="[76]"></a>nsAPI_USB_ResetEP</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nsAPI_USB_ResetEP &rArr; USB_GetEPCmdStatusPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetEPCmdStatusPtr
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPAdr
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ReqSetInterface
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ReqSetConfiguration
</UL>

<P><STRONG><a name="[57]"></a>nsAPI_USB_SetStallEP</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nsAPI_USB_SetStallEP &rArr; nsAPI_USB_DeactivateEP
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_DeactivateEP
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetEPCmdStatusPtr
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPAdr
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ReqSetClrFeature
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USBCore_Stall_i
</UL>

<P><STRONG><a name="[6c]"></a>nsAPI_USB_ClrStallEP</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nsAPI_USB_ClrStallEP &rArr; USB_GetEPCmdStatusPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetEPCmdStatusPtr
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPAdr
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ReqSetClrFeature
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
</UL>

<P><STRONG><a name="[4f]"></a>nsAPI_USB_ReadSetupEP</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = nsAPI_USB_ReadSetupEP &rArr; USB_GetEPCmdStatusPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetEPCmdStatusPtr
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_SetupStage
</UL>

<P><STRONG><a name="[53]"></a>nsAPI_USB_ReadEP</STRONG> (Thumb, 330 bytes, Stack size 48 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = nsAPI_USB_ReadEP &rArr; USB_GetEPCmdStatusPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetEPCmdStatusPtr
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPAdr
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_StatusOutStage
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_DataOutStage
</UL>

<P><STRONG><a name="[51]"></a>nsAPI_USB_WriteEP</STRONG> (Thumb, 246 bytes, Stack size 48 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = nsAPI_USB_WriteEP &rArr; USB_GetEPCmdStatusPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetEPCmdStatusPtr
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPAdr
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Main_MouseEventHandle
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_Configure_Event
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_StatusInStage
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_DataInStage
</UL>

<P><STRONG><a name="[5f]"></a>wnDrv_Usb_ClrGetReqStatus</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wnDrv_Usb_ClrGetReqStatus &rArr; USB_GetEPCmdStatusPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetEPCmdStatusPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
</UL>

<P><STRONG><a name="[19]"></a>USB_IRQHandler</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USB_IRQHandler &rArr; NDrv_USB_Reset &rArr; NDrv_USB_EPInit
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Suspend_Event
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Resume_Event
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Reset_Event
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Resume
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Suspend
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_USB_Reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>wnDrv_Usb_EP_Status</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, usbhw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetEPCmdStatusPtr
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EPAdr
</UL>

<P><STRONG><a name="[79]"></a>USB_Reset_Event</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, usbuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_Reset_Event
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ResetCore
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IRQHandler
</UL>

<P><STRONG><a name="[7b]"></a>USB_Suspend_Event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IRQHandler
</UL>

<P><STRONG><a name="[7d]"></a>USB_Resume_Event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IRQHandler
</UL>

<P><STRONG><a name="[5d]"></a>nsAPI_USB_Configure_Event</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usbuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = nsAPI_USB_Configure_Event &rArr; nsAPI_USB_WriteEP &rArr; USB_GetEPCmdStatusPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_WriteEP
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
</UL>

<P><STRONG><a name="[23]"></a>nsAPI_USB_EndPoint1</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, usbuser.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> usbuser.o(.constdata)
</UL>
<P><STRONG><a name="[ab]"></a>nsAPI_USB_EndPoint2</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, usbuser.o(.text), UNUSED)

<P><STRONG><a name="[ac]"></a>nsAPI_USB_EndPoint3</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, usbuser.o(.text), UNUSED)

<P><STRONG><a name="[ad]"></a>nsAPI_USB_EndPoint4</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, usbuser.o(.text), UNUSED)

<P><STRONG><a name="[81]"></a>nsAPI_USB_EndPointClr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usbuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mapp_Main_Init
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>Reserved_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reserved_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reserved_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>USBWakeup_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>USB_FIQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11uxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>nsAPI_Main_GetInReport</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_GetReport
</UL>

<P><STRONG><a name="[31]"></a>nsAPI_Main_GetInMouseButtonReport</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nsAPI_Main_GetInMouseButtonReport
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_GPIO_MouseButtonMonitor
</UL>

<P><STRONG><a name="[34]"></a>nsAPI_Main_GetInMouseQIEReport</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_GPIO_QIE_Monitor
</UL>

<P><STRONG><a name="[38]"></a>SetOutReport</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_SetReport
</UL>

<P><STRONG><a name="[80]"></a>Mapp_Main_Init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Mapp_Main_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPointClr
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20]"></a>main</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = main &rArr; nsAPI_SSP_Sensor_Init &rArr; nsAPI_USB_WriteEP &rArr; USB_GetEPCmdStatusPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Monitor
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Z_Wheel
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mapp_Main_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Init
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_System_Init
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_GPIO_MouseButtonMonitor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[85]"></a>nsAPI_Main_Clr_MouseEvent</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Main_MouseEventHandle
</UL>

<P><STRONG><a name="[84]"></a>nsAPI_Main_MouseEventHandle</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = nsAPI_Main_MouseEventHandle &rArr; nsAPI_USB_WriteEP &rArr; USB_GetEPCmdStatusPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Main_Clr_MouseEvent
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_WriteEP
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Monitor
</UL>

<P><STRONG><a name="[17]"></a>SSP0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ssp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SSP1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ssp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>nsAPI_SSP_Init</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = nsAPI_SSP_Init &rArr; NDrv_GPIO_SetBitValue
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_GPIO_SetBitValue
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_System_Init
</UL>

<P><STRONG><a name="[8e]"></a>nsAPI_SSP_Send</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nsAPI_SSP_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_LoadSROM
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Monitor
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Write
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Read
</UL>

<P><STRONG><a name="[8f]"></a>nsAPI_SSP_Receive</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ssp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Monitor
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Read
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, systick.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>nsAPI_SysTick_Init</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, systick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nsAPI_SysTick_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_System_Init
</UL>

<P><STRONG><a name="[12]"></a>I2C_IRQHandler</STRONG> (Thumb, 458 bytes, Stack size 4 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = I2C_IRQHandler &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11uxx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>NDrv_API_I2C_Start</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_I2C_Read
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_I2C_Write
</UL>

<P><STRONG><a name="[89]"></a>NDrv_API_I2C_Stop</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_I2C_Read
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_I2C_Write
</UL>

<P><STRONG><a name="[3c]"></a>nsAPI_I2C_Init</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nsAPI_I2C_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_System_Init
</UL>

<P><STRONG><a name="[87]"></a>nsAPI_I2C_Write</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_API_I2C_Stop
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_API_I2C_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_I2C_Read_Database
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_I2C_Write_Database
</UL>

<P><STRONG><a name="[8a]"></a>nsAPI_I2C_Read</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_API_I2C_Stop
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_API_I2C_Start
</UL>

<P><STRONG><a name="[8b]"></a>nsAPI_I2C_Write_Database</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_I2C_Write
</UL>

<P><STRONG><a name="[8c]"></a>nsAPI_I2C_Read_Database</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_I2C_Write
</UL>

<P><STRONG><a name="[8d]"></a>nsAPI_SSP_Delay1us</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, pixart_sensor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esd_Check
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Sensor_Hard_Reset
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_LoadSROM
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Monitor
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Write
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Read
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Init
</UL>

<P><STRONG><a name="[64]"></a>nsAPI_SSP_Sensor_Read</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, pixart_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nsAPI_SSP_Sensor_Read &rArr; NDrv_GPIO_SetBitValue
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Delay1us
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Receive
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Send
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_GPIO_SetBitValue
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esd_Check
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Init
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
</UL>

<P><STRONG><a name="[65]"></a>nsAPI_SSP_Sensor_Write</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, pixart_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = nsAPI_SSP_Sensor_Write &rArr; NDrv_GPIO_SetBitValue
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Delay1us
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Send
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_GPIO_SetBitValue
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esd_Check
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_LoadSROM
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Init
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_MouseScanButton
</UL>

<P><STRONG><a name="[90]"></a>nsAPI_SSP_Sensor_LoadSROM</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, pixart_sensor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Delay1us
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Send
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Write
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_GPIO_SetBitValue
</UL>

<P><STRONG><a name="[91]"></a>nsAPI_Sensor_Hard_Reset</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, pixart_sensor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Delay1us
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_GPIO_SetBitValue
</UL>

<P><STRONG><a name="[66]"></a>nsAPI_SSP_Sensor_Init</STRONG> (Thumb, 1370 bytes, Stack size 24 bytes, pixart_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = nsAPI_SSP_Sensor_Init &rArr; nsAPI_USB_WriteEP &rArr; USB_GetEPCmdStatusPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Delay1us
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_WriteEP
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Write
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Read
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_GPIO_SetBitValue
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esd_Check
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
</UL>

<P><STRONG><a name="[92]"></a>esd_Check</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, pixart_sensor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Delay1us
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Write
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Read
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Init
</UL>

<P><STRONG><a name="[83]"></a>nsAPI_SSP_Sensor_Monitor</STRONG> (Thumb, 576 bytes, Stack size 8 bytes, pixart_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = nsAPI_SSP_Sensor_Monitor &rArr; nsAPI_Main_MouseEventHandle &rArr; nsAPI_USB_WriteEP &rArr; USB_GetEPCmdStatusPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Delay1us
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Receive
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Send
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Main_MouseEventHandle
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_GPIO_GetPinValue
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_GPIO_SetBitValue
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f]"></a>nsAPI_MouseScanButton</STRONG> (Thumb, 584 bytes, Stack size 32 bytes, pixart_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = nsAPI_MouseScanButton &rArr; nsAPI_SSP_Sensor_Write &rArr; NDrv_GPIO_SetBitValue
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Write
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_GPIO_GetPinValue
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_GPIO_SetBitValue
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_GPIO_MouseButtonMonitor
</UL>

<P><STRONG><a name="[82]"></a>Z_Wheel</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, pixart_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Z_Wheel &rArr; nsAPI_GPIO_GetPinValue
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_GPIO_GetPinValue
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[68]"></a>msAPI_Flash_PrepareSec</STRONG> (Thumb, 40 bytes, Stack size 48 bytes, flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = msAPI_Flash_PrepareSec
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_In_Flash
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Flash_BootBurn2Flash
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Flash_EraseAppSector
</UL>

<P><STRONG><a name="[6a]"></a>msAPI_Flash_CopyRAM2Flash</STRONG> (Thumb, 38 bytes, Stack size 48 bytes, flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = msAPI_Flash_CopyRAM2Flash
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_In_Flash
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Flash_BootBurn2Flash
</UL>

<P><STRONG><a name="[69]"></a>msAPI_Flash_EraseSec</STRONG> (Thumb, 44 bytes, Stack size 48 bytes, flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = msAPI_Flash_EraseSec
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Flash_EraseAppSector
</UL>

<P><STRONG><a name="[94]"></a>nsAPI_Flash_EraseAppSector</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msAPI_Flash_PrepareSec
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msAPI_Flash_EraseSec
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Flash_AppPresent
</UL>

<P><STRONG><a name="[96]"></a>_XRead</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Flash_AppPresent
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Flash_IsUpgrade
</UL>

<P><STRONG><a name="[95]"></a>nsAPI_Flash_IsUpgrade</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XRead
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Flash_AppPresent
</UL>

<P><STRONG><a name="[97]"></a>nsAPI_Flash_AppPresent</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Flash_IsUpgrade
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XRead
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Flash_EraseAppSector
</UL>

<P><STRONG><a name="[ae]"></a>nsAPI_Flash_Jump2AppSector</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, flash.o(.text), UNUSED)

<P><STRONG><a name="[98]"></a>nsAPI_Flash_BootBurn2Flash</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msAPI_Flash_PrepareSec
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msAPI_Flash_CopyRAM2Flash
</UL>

<P><STRONG><a name="[99]"></a>Write_In_Flash</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msAPI_Flash_PrepareSec
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msAPI_Flash_CopyRAM2Flash
</UL>

<P><STRONG><a name="[af]"></a>nsAPI_Flash_CopyData2Buf</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, flash.o(.text), UNUSED)

<P><STRONG><a name="[b0]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xprintf
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Timer32PWM_Init
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_UART_Init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Timer16_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SysTick_Init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_I2C_Init
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_System_Init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[b1]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SSP_Sensor_Monitor
</UL>

<P><STRONG><a name="[9b]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[b2]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[b3]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[67]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
</UL>

<P><STRONG><a name="[b4]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[9c]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[78]"></a>__aeabi_uread4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_WriteEP
</UL>

<P><STRONG><a name="[b5]"></a>__rt_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[77]"></a>__aeabi_uwrite4</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uwrite4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ReadSetupEP
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ReadEP
</UL>

<P><STRONG><a name="[b7]"></a>__rt_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[b8]"></a>_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[25]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[b9]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[58]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, usbcore.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
</UL>

<P><STRONG><a name="[ba]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[bb]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[bc]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[5b]"></a>nsAPI_USB_ReqGetDescriptor</STRONG> (Thumb, 284 bytes, Stack size 8 bytes, usbcore.o(i.nsAPI_USB_ReqGetDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nsAPI_USB_ReqGetDescriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
</UL>

<P><STRONG><a name="[59]"></a>nsAPI_USB_ReqGetStatus</STRONG> (Thumb, 190 bytes, Stack size 0 bytes, usbcore.o(i.nsAPI_USB_ReqGetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
</UL>

<P><STRONG><a name="[5a]"></a>nsAPI_USB_ReqSetClrFeature</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, usbcore.o(i.nsAPI_USB_ReqSetClrFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = nsAPI_USB_ReqSetClrFeature &rArr; nsAPI_USB_SetStallEP &rArr; nsAPI_USB_DeactivateEP
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_SetStallEP
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ClrStallEP
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_USB_WakeUpCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
</UL>

<P><STRONG><a name="[5c]"></a>nsAPI_USB_ReqSetConfiguration</STRONG> (Thumb, 440 bytes, Stack size 24 bytes, usbcore.o(i.nsAPI_USB_ReqSetConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = nsAPI_USB_ReqSetConfiguration &rArr; nsAPI_USB_ResetEP &rArr; USB_GetEPCmdStatusPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ResetEP
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EnableEP
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_DisableEP
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NDrv_USB_Configure
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
</UL>

<P><STRONG><a name="[5e]"></a>nsAPI_USB_ReqSetInterface</STRONG> (Thumb, 322 bytes, Stack size 40 bytes, usbcore.o(i.nsAPI_USB_ReqSetInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = nsAPI_USB_ReqSetInterface &rArr; nsAPI_USB_ResetEP &rArr; USB_GetEPCmdStatusPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ResetEP
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EnableEP
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_DisableEP
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EndPoint0
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[43]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, timer16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Timer16_Init
</UL>

<P><STRONG><a name="[41]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, timer16.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_Timer16_Init
</UL>

<P><STRONG><a name="[6e]"></a>EPAdr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wnDrv_Usb_EP_Status
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_DeactivateEP
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_GetEPCmdStatusPtr
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_WriteEP
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_SetStallEP
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ResetEP
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ReadEP
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_EnableEP
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_DisableEP
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_USB_ClrStallEP
</UL>

<P><STRONG><a name="[86]"></a>NVIC_SetPriority</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, systick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nsAPI_SysTick_Init
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[27]"></a>__arm_fini_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_fini
</UL>
<HR></body></html>
