C51 COMPILER V9.60.0.0   KEYDOWN_LED                                                       09/23/2022 11:52:50 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE KEYDOWN_LED
OBJECT MODULE PLACED IN .\output\KeyDown_Led.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\KeyDown_Led.c LARGE WARNINGLEVEL(0) OPTIMIZE(8,SPEED) BROWSE DEBUG O
                    -BJECTEXTEND PRINT(.\Listings\KeyDown_Led.lst) OBJECT(.\output\KeyDown_Led.obj)

line level    source

   1          #include "..\include\SH68F90.h"
   2          #include "..\include\stdtype.h"
   3          #include "..\include\mcu_def.h"
   4          #include "..\include\pwm_control.h"
   5          #include ".\include\Auser.h"
   6          #include "..\include\CFG.h"
   7          #include <intrins.h>
   8          #include <string.h>
   9          U8 xdata        KeyDown_Time[126];
  10          void Deal_KeyDown(void)//灯的模式变换
  11          {
  12   1              if(b_SuiLiang_Mode)     //灯的随亮模式=1（踏雪无痕模式）
  13   1              {       
  14   2                              Deal_Tbl_Image(Key_Index);
  15   2                      if(Brack_b(Image_Num))
  16   2                      {       
  17   3                              Change_AColor_Time(Image_Num);
  18   3                      }
  19   2              }
  20   1              else if(b_Pao_Heng|b_HangPao_Mode|b_Flower_Mode|b_HengMie_Mode)
  21   1              {
  22   2                      if(break_Data[Port_Data(Key_Index)]&Pin_Data(Key_Index))
  23   2                      {       
  24   3                              if(Brack_b(Image_Num))
  25   3                                      Deal_Image_Num2(Key_Index);
  26   3                      }
  27   2              }
  28   1              else if(b_Record_Mode)
  29   1              {
  30   2                      if(!bFn)//fn按键没按下
  31   2                      {       
  32   3                              Deal_Tbl_Image(Key_Index);
  33   3                              if(break_Data[Port_Data(Key_Index)]&Pin_Data(Key_Index))
  34   3                              {
  35   4                                      KeyDown_Time[Image_Num]++;
  36   4                                      if(KeyDown_Time[Image_Num]>7)
  37   4                                              KeyDown_Time[Image_Num]=1;
  38   4                                      if(KeyDown_Time[Image_Num]==7)
  39   4                                              Give_NUM_Image(Image_Num,KeyDown_Time[Image_Num],0);
  40   4                                      else
  41   4                                              Give_NUM_Image(Image_Num,KeyDown_Time[Image_Num],255);
  42   4                              }       
  43   3                      }
  44   2              }       
  45   1      }
  46          //**************************************
  47          void Sacn_Key_Led_Up(void)
  48          {
  49   1              U8 i,j,n;
  50   1                              j=10;
  51   1              if(bSpeed_End)
  52   1                      return;         
  53   1              if(b_SuiLiang_Mode)
  54   1              {       
C51 COMPILER V9.60.0.0   KEYDOWN_LED                                                       09/23/2022 11:52:50 PAGE 2   

  55   2                      Temp_Speed++;
  56   2                      if(Temp_Speed>Speed_Data)
  57   2                      {
  58   3                              Temp_Speed=0;   
  59   3                              for(i=0;i<126;i++)
  60   3                              {
  61   4                                      if(Brack_b(i))
  62   4                                      {
  63   5                                              if(Image[0][i]>PWM_AddData(0,i))
  64   5                                                      Image[0][i]=Image[0][i]-Brightness_Wheels;
  65   5                                              if(Image[1][i]>PWM_AddData(1,i))
  66   5                                                      Image[1][i]=Image[1][i]-Brightness_Wheels;
  67   5                                              if(Image[2][i]>PWM_AddData(2,i))
  68   5                                                      Image[2][i]=Image[2][i]-Brightness_Wheels;
  69   5                                                      
  70   5                                              if(Image[0][i]<PWM_AddData(0,i))        
  71   5                                                      Image[0][i]=PWM_AddData(0,i);
  72   5                                              if(Image[1][i]<PWM_AddData(1,i))        
  73   5                                                      Image[1][i]=PWM_AddData(1,i);   
  74   5                                              if(Image[2][i]<PWM_AddData(2,i))        
  75   5                                                      Image[2][i]=PWM_AddData(2,i);   
  76   5                                                      
  77   5                                      }       
  78   4                              }
  79   3                      }       
  80   2              }       
  81   1              else  if(b_Pao_Heng|b_HangPao_Mode|b_Flower_Mode|b_HengMie_Mode)
  82   1              {
  83   2                      for(i=0;i<126;i++)
  84   2                      {
  85   3                              if(Brack_b(i))
  86   3                              {       
  87   4                                      if(Image[0][i]>PWM_AddData(0,i))
  88   4                                              Image[0][i]=Image[0][i]-(Brightness_Wheels+9);
  89   4                                      if(Image[1][i]>PWM_AddData(1,i))
  90   4                                              Image[1][i]=Image[1][i]-(Brightness_Wheels+9);
  91   4                                      if(Image[2][i]>PWM_AddData(2,i))
  92   4                                              Image[2][i]=Image[2][i]-(Brightness_Wheels+9);
  93   4                                                      
  94   4                                                      
  95   4                                                      
  96   4                                              if(Image[0][i]<PWM_AddData(0,i))        
  97   4                                                      Image[0][i]=PWM_AddData(0,i);
  98   4                                              if(Image[1][i]<PWM_AddData(1,i))        
  99   4                                                      Image[1][i]=PWM_AddData(1,i);   
 100   4                                              if(Image[2][i]<PWM_AddData(2,i))        
 101   4                                                      Image[2][i]=PWM_AddData(2,i);   
 102   4                              }
 103   3                      }
 104   2              }       
 105   1              else if(b_PaoMa1_Mode|b_PaoMa2_Mode|b_PaoMa3_Mode|b_PaoMa4_Mode|b_Effect_light_1|b_Effect_light_2|b_Raind
             -rops_Mode)
 106   1              {
 107   2                      for(i=0;i<126;i++)
 108   2                      {
 109   3                              if(Brack_b(i))
 110   3                              {       
 111   4                                      if(Image[0][i]>PWM_AddData(0,i))
 112   4                                                      Image[0][i]=Image[0][i]-Brightness_Wheels-5;
 113   4                                              if(Image[1][i]>PWM_AddData(1,i))
 114   4                                                      Image[1][i]=Image[1][i]-Brightness_Wheels-5;
 115   4                                              if(Image[2][i]>PWM_AddData(2,i))
C51 COMPILER V9.60.0.0   KEYDOWN_LED                                                       09/23/2022 11:52:50 PAGE 3   

 116   4                                                      Image[2][i]=Image[2][i]-Brightness_Wheels-5;
 117   4                                                      
 118   4                                              if(Image[0][i]<PWM_AddData(0,i))        
 119   4                                                      Image[0][i]=PWM_AddData(0,i);
 120   4                                              if(Image[1][i]<PWM_AddData(1,i))        
 121   4                                                      Image[1][i]=PWM_AddData(1,i);   
 122   4                                              if(Image[2][i]<PWM_AddData(2,i))        
 123   4                                                      Image[2][i]=PWM_AddData(2,i);   
 124   4                              }
 125   3                      }
 126   2              }       
 127   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1880    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    126       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
